#pragma checksum "C:\SomePrograms\WingetUI-Store\src\wingetui\Interface\MainWindow.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "981BD91EE16E0A677741AB3BD5ECBBF63EBB51182E4B0D91759DE3AEC3041387"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModernWindow
{
    partial class MainWindow : 
        global::Microsoft.UI.Xaml.Window, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainWindow_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IMainWindow_Bindings
        {
            private global::ModernWindow.MainWindow dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.InfoBar obj15;
            private global::Microsoft.UI.Xaml.Controls.InfoBar obj16;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj15VisibilityDisabled = false;
            private static bool isobj16VisibilityDisabled = false;

            private MainWindow_obj1_BindingsTracking bindingsTracking;

            public MainWindow_obj1_Bindings()
            {
                this.bindingsTracking = new MainWindow_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 43 && columnNumber == 132)
                {
                    isobj15VisibilityDisabled = true;
                }
                else if (lineNumber == 44 && columnNumber == 130)
                {
                    isobj16VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 15: // Interface\MainWindow.xaml line 43
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.InfoBar>(target);
                        break;
                    case 16: // Interface\MainWindow.xaml line 44
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.InfoBar>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMainWindow_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::ModernWindow.MainWindow>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::ModernWindow.MainWindow obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_UpdatesBanner(obj.UpdatesBanner, phase);
                        this.Update_ErrorBanner(obj.ErrorBanner, phase);
                    }
                }
            }
            private void Update_UpdatesBanner(global::Microsoft.UI.Xaml.Controls.InfoBar obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_UpdatesBanner(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_UpdatesBanner_IsOpen(obj.IsOpen, phase);
                    }
                }
            }
            private void Update_UpdatesBanner_IsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_UpdatesBanner_IsOpen_Cast_IsOpen_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_UpdatesBanner_IsOpen_Cast_IsOpen_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Interface\MainWindow.xaml line 43
                    if (!isobj15VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj15, obj);
                    }
                }
            }
            private void Update_ErrorBanner(global::Microsoft.UI.Xaml.Controls.InfoBar obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ErrorBanner(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ErrorBanner_IsOpen(obj.IsOpen, phase);
                    }
                }
            }
            private void Update_ErrorBanner_IsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ErrorBanner_IsOpen_Cast_IsOpen_To_Visibility(obj ? global::Microsoft.UI.Xaml.Visibility.Visible : global::Microsoft.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ErrorBanner_IsOpen_Cast_IsOpen_To_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Interface\MainWindow.xaml line 44
                    if (!isobj16VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj16, obj);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MainWindow_obj1_BindingsTracking
            {
                private global::System.WeakReference<MainWindow_obj1_Bindings> weakRefToBindingObj; 

                public MainWindow_obj1_BindingsTracking(MainWindow_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MainWindow_obj1_Bindings>(obj);
                }

                public MainWindow_obj1_Bindings TryGetBindingObject()
                {
                    MainWindow_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_UpdatesBanner(null);
                    UpdateChildListeners_ErrorBanner(null);
                }

                public void DependencyPropertyChanged_UpdatesBanner_IsOpen(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    MainWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.InfoBar obj = sender as global::Microsoft.UI.Xaml.Controls.InfoBar;
                        if (obj != null)
                        {
                            bindings.Update_UpdatesBanner_IsOpen(obj.IsOpen, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.InfoBar cache_UpdatesBanner = null;
                private long tokenDPC_UpdatesBanner_IsOpen = 0;
                public void UpdateChildListeners_UpdatesBanner(global::Microsoft.UI.Xaml.Controls.InfoBar obj)
                {
                    if (obj != cache_UpdatesBanner)
                    {
                        if (cache_UpdatesBanner != null)
                        {
                            cache_UpdatesBanner.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, tokenDPC_UpdatesBanner_IsOpen);
                            cache_UpdatesBanner = null;
                        }
                        if (obj != null)
                        {
                            cache_UpdatesBanner = obj;
                            tokenDPC_UpdatesBanner_IsOpen = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, DependencyPropertyChanged_UpdatesBanner_IsOpen);
                        }
                    }
                }
                public void DependencyPropertyChanged_ErrorBanner_IsOpen(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    MainWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.InfoBar obj = sender as global::Microsoft.UI.Xaml.Controls.InfoBar;
                        if (obj != null)
                        {
                            bindings.Update_ErrorBanner_IsOpen(obj.IsOpen, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.InfoBar cache_ErrorBanner = null;
                private long tokenDPC_ErrorBanner_IsOpen = 0;
                public void UpdateChildListeners_ErrorBanner(global::Microsoft.UI.Xaml.Controls.InfoBar obj)
                {
                    if (obj != cache_ErrorBanner)
                    {
                        if (cache_ErrorBanner != null)
                        {
                            cache_ErrorBanner.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, tokenDPC_ErrorBanner_IsOpen);
                            cache_ErrorBanner = null;
                        }
                        if (obj != null)
                        {
                            cache_ErrorBanner = obj;
                            tokenDPC_ErrorBanner_IsOpen = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, DependencyPropertyChanged_ErrorBanner_IsOpen);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Interface\MainWindow.xaml line 15
                {
                    this.__content_root = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 3: // Interface\MainWindow.xaml line 17
                {
                    this.SplashScreenColumn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ColumnDefinition>(target);
                }
                break;
            case 4: // Interface\MainWindow.xaml line 18
                {
                    this.ContentColumn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ColumnDefinition>(target);
                }
                break;
            case 5: // Interface\MainWindow.xaml line 23
                {
                    this.MainContentGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 6: // Interface\MainWindow.xaml line 46
                {
                    this.LoadingWindow = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 7: // Interface\MainWindow.xaml line 58
                {
                    this.LaunchBackground = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Canvas>(target);
                }
                break;
            case 8: // Interface\MainWindow.xaml line 92
                {
                    this.LoadingIndicator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressBar>(target);
                }
                break;
            case 9: // Interface\MainWindow.xaml line 77
                {
                    this.InAnimation_Text = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Animations.AnimationSet>(target);
                }
                break;
            case 10: // Interface\MainWindow.xaml line 81
                {
                    this.OutAnimation_Text = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Animations.AnimationSet>(target);
                }
                break;
            case 11: // Interface\MainWindow.xaml line 87
                {
                    this.WingetUITitle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 12: // Interface\MainWindow.xaml line 62
                {
                    this.InAnimation_Border = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Animations.AnimationSet>(target);
                }
                break;
            case 13: // Interface\MainWindow.xaml line 65
                {
                    this.OutAnimation_Border = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.Animations.AnimationSet>(target);
                }
                break;
            case 14: // Interface\MainWindow.xaml line 33
                {
                    this.__app_titlebar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Border>(target);
                }
                break;
            case 15: // Interface\MainWindow.xaml line 43
                {
                    this.UpdatesBanner = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.InfoBar>(target);
                }
                break;
            case 16: // Interface\MainWindow.xaml line 44
                {
                    this.ErrorBanner = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.InfoBar>(target);
                }
                break;
            case 17: // Interface\MainWindow.xaml line 40
                {
                    this.AppTitle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Interface\MainWindow.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Window element1 = (global::Microsoft.UI.Xaml.Window)target;
                    MainWindow_obj1_Bindings bindings = new MainWindow_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Activated += bindings.Activated;
                }
                break;
            }
            return returnValue;
        }
    }
}

