//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace ModernWindow
{
    public partial class MainApp : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
        private global::ModernWindow.wingetui_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::ModernWindow.wingetui_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace ModernWindow.wingetui_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::ModernWindow.wingetui_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::ModernWindow.wingetui_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::ModernWindow.wingetui_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[158];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "Microsoft.UI.Xaml.Controls.SelectorBar";
            _typeNameTable[5] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[6] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.SelectorBarItem>";
            _typeNameTable[7] = "Microsoft.UI.Xaml.Controls.SelectorBarItem";
            _typeNameTable[8] = "Microsoft.UI.Xaml.Controls.ItemContainer";
            _typeNameTable[9] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[10] = "String";
            _typeNameTable[11] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[12] = "ModernWindow.Interface.AboutWingetUI";
            _typeNameTable[13] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[14] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[15] = "ModernWindow.Interface.Widgets.TranslatedTextBlock";
            _typeNameTable[16] = "Microsoft.UI.Xaml.TextWrapping";
            _typeNameTable[17] = "ModernWindow.Interface.Widgets.LocalIcon";
            _typeNameTable[18] = "Microsoft.UI.Xaml.Controls.ImageIcon";
            _typeNameTable[19] = "Microsoft.UI.Xaml.Media.ImageSource";
            _typeNameTable[20] = "ModernWindow.Interface.IgnoredUpdatesManager";
            _typeNameTable[21] = "Microsoft.UI.Xaml.Controls.ScrollView";
            _typeNameTable[22] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[23] = "Microsoft.UI.Xaml.Controls.ScrollingScrollMode";
            _typeNameTable[24] = "System.Enum";
            _typeNameTable[25] = "System.ValueType";
            _typeNameTable[26] = "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation";
            _typeNameTable[27] = "Microsoft.UI.Composition.CompositionPropertySet";
            _typeNameTable[28] = "Microsoft.UI.Composition.CompositionObject";
            _typeNameTable[29] = "Double";
            _typeNameTable[30] = "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility";
            _typeNameTable[31] = "Microsoft.UI.Xaml.Controls.ScrollingChainMode";
            _typeNameTable[32] = "Microsoft.UI.Xaml.Controls.ScrollingRailMode";
            _typeNameTable[33] = "Microsoft.UI.Xaml.Controls.ScrollingInputKinds";
            _typeNameTable[34] = "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter";
            _typeNameTable[35] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[36] = "Microsoft.UI.Xaml.Controls.ScrollingInteractionState";
            _typeNameTable[37] = "Single";
            _typeNameTable[38] = "Microsoft.UI.Xaml.Controls.ScrollingZoomMode";
            _typeNameTable[39] = "Microsoft.UI.Xaml.Controls.ProgressBar";
            _typeNameTable[40] = "Microsoft.UI.Xaml.Controls.Primitives.RangeBase";
            _typeNameTable[41] = "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings";
            _typeNameTable[42] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[43] = "ModernWindow.Interface.Dialogs.InstallOptionsPage";
            _typeNameTable[44] = "Microsoft.UI.Xaml.Controls.WebView2";
            _typeNameTable[45] = "System.Uri";
            _typeNameTable[46] = "Microsoft.Web.WebView2.Core.CoreWebView2";
            _typeNameTable[47] = "Windows.UI.Color";
            _typeNameTable[48] = "ModernWindow.Interface.Dialogs.ReleaseNotes";
            _typeNameTable[49] = "Microsoft.UI.Xaml.Media.MicaBackdrop";
            _typeNameTable[50] = "Microsoft.UI.Xaml.Media.SystemBackdrop";
            _typeNameTable[51] = "Microsoft.UI.Composition.SystemBackdrops.MicaKind";
            _typeNameTable[52] = "CommunityToolkit.WinUI.Animations.Explicit";
            _typeNameTable[53] = "CommunityToolkit.WinUI.Animations.AnimationDictionary";
            _typeNameTable[54] = "CommunityToolkit.WinUI.Animations.AnimationSet";
            _typeNameTable[55] = "Microsoft.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[56] = "CommunityToolkit.WinUI.Animations.TranslationAnimation";
            _typeNameTable[57] = "CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<String, System.Numerics.Vector3>";
            _typeNameTable[58] = "CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>";
            _typeNameTable[59] = "CommunityToolkit.WinUI.Animations.Animation";
            _typeNameTable[60] = "System.Collections.Generic.IList`1<CommunityToolkit.WinUI.Animations.IKeyFrame`1<System.Numerics.Vector3>>";
            _typeNameTable[61] = "CommunityToolkit.WinUI.Animations.IKeyFrame`1<System.Numerics.Vector3>";
            _typeNameTable[62] = "System.Nullable`1<TimeSpan>";
            _typeNameTable[63] = "TimeSpan";
            _typeNameTable[64] = "System.Nullable`1<Microsoft.UI.Xaml.Media.Animation.EasingMode>";
            _typeNameTable[65] = "Microsoft.UI.Xaml.Media.Animation.EasingMode";
            _typeNameTable[66] = "System.Nullable`1<CommunityToolkit.WinUI.Animations.EasingType>";
            _typeNameTable[67] = "CommunityToolkit.WinUI.Animations.EasingType";
            _typeNameTable[68] = "CommunityToolkit.WinUI.Animations.RepeatOption";
            _typeNameTable[69] = "Microsoft.UI.Composition.AnimationDelayBehavior";
            _typeNameTable[70] = "CommunityToolkit.WinUI.Animations.OpacityAnimation";
            _typeNameTable[71] = "CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<System.Nullable`1<Double>, Double>";
            _typeNameTable[72] = "CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>";
            _typeNameTable[73] = "System.Collections.Generic.IList`1<CommunityToolkit.WinUI.Animations.IKeyFrame`1<Double>>";
            _typeNameTable[74] = "CommunityToolkit.WinUI.Animations.IKeyFrame`1<Double>";
            _typeNameTable[75] = "System.Nullable`1<Double>";
            _typeNameTable[76] = "Microsoft.UI.Xaml.Controls.InfoBar";
            _typeNameTable[77] = "Microsoft.UI.Xaml.Controls.InfoBarSeverity";
            _typeNameTable[78] = "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase";
            _typeNameTable[79] = "System.Windows.Input.ICommand";
            _typeNameTable[80] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[81] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[82] = "Microsoft.UI.Xaml.Controls.IconSource";
            _typeNameTable[83] = "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings";
            _typeNameTable[84] = "ModernWindow.MainWindow";
            _typeNameTable[85] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[86] = "ModernWindow.Interface.Widgets.BetterMenu";
            _typeNameTable[87] = "Microsoft.UI.Xaml.Controls.MenuFlyout";
            _typeNameTable[88] = "ModernWindow.Interface.Widgets.BetterMenuItem";
            _typeNameTable[89] = "Microsoft.UI.Xaml.Controls.MenuFlyoutItem";
            _typeNameTable[90] = "ModernWindow.Interface.Widgets.NavButton";
            _typeNameTable[91] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[92] = "Int32";
            _typeNameTable[93] = "Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings";
            _typeNameTable[94] = "ModernWindow.Interface.NavigationPage";
            _typeNameTable[95] = "ModernWindow.Interface.Pages.AboutPages.AboutWingetUI";
            _typeNameTable[96] = "ModernWindow.Interface.Pages.AboutPages.Contributors";
            _typeNameTable[97] = "ModernWindow.Interface.Pages.AboutPages.SupportMe";
            _typeNameTable[98] = "ModernWindow.Interface.Pages.AboutPages.ThirdPartyLicenses";
            _typeNameTable[99] = "ModernWindow.Interface.Pages.AboutPages.Translators";
            _typeNameTable[100] = "CommunityToolkit.WinUI.Animations.Implicit";
            _typeNameTable[101] = "CommunityToolkit.WinUI.Animations.ImplicitAnimationSet";
            _typeNameTable[102] = "ModernWindow.Interface.Dialogs.HelpDialog";
            _typeNameTable[103] = "ModernWindow.Interface.Pages.LogPage";
            _typeNameTable[104] = "Microsoft.UI.Xaml.Controls.Expander";
            _typeNameTable[105] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[106] = "Microsoft.UI.Xaml.Controls.ExpandDirection";
            _typeNameTable[107] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[108] = "Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings";
            _typeNameTable[109] = "Microsoft.UI.Xaml.Controls.ItemsRepeater";
            _typeNameTable[110] = "Microsoft.UI.Xaml.Controls.Layout";
            _typeNameTable[111] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[112] = "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider";
            _typeNameTable[113] = "Microsoft.UI.Xaml.Controls.ItemsSourceView";
            _typeNameTable[114] = "CommunityToolkit.WinUI.Controls.WrapLayout";
            _typeNameTable[115] = "Microsoft.UI.Xaml.Controls.VirtualizingLayout";
            _typeNameTable[116] = "Microsoft.UI.Xaml.Controls.Orientation";
            _typeNameTable[117] = "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation";
            _typeNameTable[118] = "ModernWindow.Interface.Dialogs.PackageDetailsPage";
            _typeNameTable[119] = "ModernWindow.Interface.Widgets.Announcer";
            _typeNameTable[120] = "ModernWindow.Interface.Widgets.SettingsEntry";
            _typeNameTable[121] = "CommunityToolkit.WinUI.Controls.SettingsExpander";
            _typeNameTable[122] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[123] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[124] = "ModernWindow.Interface.Widgets.CheckboxCard";
            _typeNameTable[125] = "CommunityToolkit.WinUI.Controls.SettingsCard";
            _typeNameTable[126] = "CommunityToolkit.WinUI.Controls.ContentAlignment";
            _typeNameTable[127] = "ModernWindow.Interface.Widgets.TextboxCard";
            _typeNameTable[128] = "ModernWindow.Interface.Widgets.ButtonCard";
            _typeNameTable[129] = "ModernWindow.Interface.Widgets.ComboboxCard";
            _typeNameTable[130] = "ModernWindow.Interface.SettingsInterface";
            _typeNameTable[131] = "Microsoft.UI.Xaml.Controls.TreeViewItem";
            _typeNameTable[132] = "Microsoft.UI.Xaml.Controls.ListViewItem";
            _typeNameTable[133] = "Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings";
            _typeNameTable[134] = "Microsoft.UI.Xaml.Controls.AppBarButton";
            _typeNameTable[135] = "CommunityToolkit.WinUI.Controls.GridSplitter";
            _typeNameTable[136] = "CommunityToolkit.WinUI.Controls.SizerBase";
            _typeNameTable[137] = "CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection";
            _typeNameTable[138] = "CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior";
            _typeNameTable[139] = "Microsoft.UI.Input.InputSystemCursorShape";
            _typeNameTable[140] = "Microsoft.UI.Xaml.Controls.RadioButtons";
            _typeNameTable[141] = "Microsoft.UI.Xaml.Controls.TreeView";
            _typeNameTable[142] = "Microsoft.UI.Xaml.Controls.TreeViewSelectionMode";
            _typeNameTable[143] = "Microsoft.UI.Xaml.Media.Animation.TransitionCollection";
            _typeNameTable[144] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";
            _typeNameTable[145] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[146] = "Microsoft.UI.Xaml.Controls.AnimatedIcon";
            _typeNameTable[147] = "Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2";
            _typeNameTable[148] = "Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedFindVisualSource";
            _typeNameTable[149] = "System.Collections.Generic.IReadOnlyDictionary`2<String, Double>";
            _typeNameTable[150] = "ModernWindow.Interface.DiscoverPackagesPage";
            _typeNameTable[151] = "ModernWindow.Interface.InstalledPackagesPage";
            _typeNameTable[152] = "ModernWindow.Interface.PackageBundlePage";
            _typeNameTable[153] = "ModernWindow.Interface.SoftwareUpdatesPage";
            _typeNameTable[154] = "Microsoft.UI.Xaml.Controls.Primitives.ToggleButton";
            _typeNameTable[155] = "ModernWindow.Interface.Widgets.SourceManager";
            _typeNameTable[156] = "ModernWindow.PackageEngine.AbstractOperation";
            _typeNameTable[157] = "ModernWindow.PackageEngine.Operations.OperationStatus";

            _typeTable = new global::System.Type[158];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::Microsoft.UI.Xaml.Controls.SelectorBar);
            _typeTable[5] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[6] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.SelectorBarItem>);
            _typeTable[7] = typeof(global::Microsoft.UI.Xaml.Controls.SelectorBarItem);
            _typeTable[8] = typeof(global::Microsoft.UI.Xaml.Controls.ItemContainer);
            _typeTable[9] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[10] = typeof(global::System.String);
            _typeTable[11] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[12] = typeof(global::ModernWindow.Interface.AboutWingetUI);
            _typeTable[13] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[14] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[15] = typeof(global::ModernWindow.Interface.Widgets.TranslatedTextBlock);
            _typeTable[16] = typeof(global::Microsoft.UI.Xaml.TextWrapping);
            _typeTable[17] = typeof(global::ModernWindow.Interface.Widgets.LocalIcon);
            _typeTable[18] = typeof(global::Microsoft.UI.Xaml.Controls.ImageIcon);
            _typeTable[19] = typeof(global::Microsoft.UI.Xaml.Media.ImageSource);
            _typeTable[20] = typeof(global::ModernWindow.Interface.IgnoredUpdatesManager);
            _typeTable[21] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollView);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[23] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode);
            _typeTable[24] = typeof(global::System.Enum);
            _typeTable[25] = typeof(global::System.ValueType);
            _typeTable[26] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation);
            _typeTable[27] = typeof(global::Microsoft.UI.Composition.CompositionPropertySet);
            _typeTable[28] = typeof(global::Microsoft.UI.Composition.CompositionObject);
            _typeTable[29] = typeof(global::System.Double);
            _typeTable[30] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility);
            _typeTable[31] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode);
            _typeTable[32] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode);
            _typeTable[33] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds);
            _typeTable[34] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[36] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState);
            _typeTable[37] = typeof(global::System.Single);
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode);
            _typeTable[39] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar);
            _typeTable[40] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase);
            _typeTable[41] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings);
            _typeTable[42] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[43] = typeof(global::ModernWindow.Interface.Dialogs.InstallOptionsPage);
            _typeTable[44] = typeof(global::Microsoft.UI.Xaml.Controls.WebView2);
            _typeTable[45] = typeof(global::System.Uri);
            _typeTable[46] = typeof(global::Microsoft.Web.WebView2.Core.CoreWebView2);
            _typeTable[47] = typeof(global::Windows.UI.Color);
            _typeTable[48] = typeof(global::ModernWindow.Interface.Dialogs.ReleaseNotes);
            _typeTable[49] = typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop);
            _typeTable[50] = typeof(global::Microsoft.UI.Xaml.Media.SystemBackdrop);
            _typeTable[51] = typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind);
            _typeTable[52] = typeof(global::CommunityToolkit.WinUI.Animations.Explicit);
            _typeTable[53] = typeof(global::CommunityToolkit.WinUI.Animations.AnimationDictionary);
            _typeTable[54] = typeof(global::CommunityToolkit.WinUI.Animations.AnimationSet);
            _typeTable[55] = typeof(global::Microsoft.UI.Xaml.DependencyObjectCollection);
            _typeTable[56] = typeof(global::CommunityToolkit.WinUI.Animations.TranslationAnimation);
            _typeTable[57] = typeof(global::CommunityToolkit.WinUI.Animations.ImplicitAnimation<global::System.String, global::System.Numerics.Vector3>);
            _typeTable[58] = typeof(global::CommunityToolkit.WinUI.Animations.Animation<global::System.String, global::System.Numerics.Vector3>);
            _typeTable[59] = typeof(global::CommunityToolkit.WinUI.Animations.Animation);
            _typeTable[60] = typeof(global::System.Collections.Generic.IList<global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Numerics.Vector3>>);
            _typeTable[61] = typeof(global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Numerics.Vector3>);
            _typeTable[62] = typeof(global::System.Nullable<global::System.TimeSpan>);
            _typeTable[63] = typeof(global::System.TimeSpan);
            _typeTable[64] = typeof(global::System.Nullable<global::Microsoft.UI.Xaml.Media.Animation.EasingMode>);
            _typeTable[65] = typeof(global::Microsoft.UI.Xaml.Media.Animation.EasingMode);
            _typeTable[66] = typeof(global::System.Nullable<global::CommunityToolkit.WinUI.Animations.EasingType>);
            _typeTable[67] = typeof(global::CommunityToolkit.WinUI.Animations.EasingType);
            _typeTable[68] = typeof(global::CommunityToolkit.WinUI.Animations.RepeatOption);
            _typeTable[69] = typeof(global::Microsoft.UI.Composition.AnimationDelayBehavior);
            _typeTable[70] = typeof(global::CommunityToolkit.WinUI.Animations.OpacityAnimation);
            _typeTable[71] = typeof(global::CommunityToolkit.WinUI.Animations.ImplicitAnimation<global::System.Nullable<global::System.Double>, global::System.Double>);
            _typeTable[72] = typeof(global::CommunityToolkit.WinUI.Animations.Animation<global::System.Nullable<global::System.Double>, global::System.Double>);
            _typeTable[73] = typeof(global::System.Collections.Generic.IList<global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Double>>);
            _typeTable[74] = typeof(global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Double>);
            _typeTable[75] = typeof(global::System.Nullable<global::System.Double>);
            _typeTable[76] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBar);
            _typeTable[77] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity);
            _typeTable[78] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase);
            _typeTable[79] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[80] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[81] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[82] = typeof(global::Microsoft.UI.Xaml.Controls.IconSource);
            _typeTable[83] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings);
            _typeTable[84] = typeof(global::ModernWindow.MainWindow);
            _typeTable[85] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[86] = typeof(global::ModernWindow.Interface.Widgets.BetterMenu);
            _typeTable[87] = typeof(global::Microsoft.UI.Xaml.Controls.MenuFlyout);
            _typeTable[88] = typeof(global::ModernWindow.Interface.Widgets.BetterMenuItem);
            _typeTable[89] = typeof(global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem);
            _typeTable[90] = typeof(global::ModernWindow.Interface.Widgets.NavButton);
            _typeTable[91] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[92] = typeof(global::System.Int32);
            _typeTable[93] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings);
            _typeTable[94] = typeof(global::ModernWindow.Interface.NavigationPage);
            _typeTable[95] = typeof(global::ModernWindow.Interface.Pages.AboutPages.AboutWingetUI);
            _typeTable[96] = typeof(global::ModernWindow.Interface.Pages.AboutPages.Contributors);
            _typeTable[97] = typeof(global::ModernWindow.Interface.Pages.AboutPages.SupportMe);
            _typeTable[98] = typeof(global::ModernWindow.Interface.Pages.AboutPages.ThirdPartyLicenses);
            _typeTable[99] = typeof(global::ModernWindow.Interface.Pages.AboutPages.Translators);
            _typeTable[100] = typeof(global::CommunityToolkit.WinUI.Animations.Implicit);
            _typeTable[101] = typeof(global::CommunityToolkit.WinUI.Animations.ImplicitAnimationSet);
            _typeTable[102] = typeof(global::ModernWindow.Interface.Dialogs.HelpDialog);
            _typeTable[103] = typeof(global::ModernWindow.Interface.Pages.LogPage);
            _typeTable[104] = typeof(global::Microsoft.UI.Xaml.Controls.Expander);
            _typeTable[105] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[106] = typeof(global::Microsoft.UI.Xaml.Controls.ExpandDirection);
            _typeTable[107] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[108] = typeof(global::Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings);
            _typeTable[109] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsRepeater);
            _typeTable[110] = typeof(global::Microsoft.UI.Xaml.Controls.Layout);
            _typeTable[111] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[112] = typeof(global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider);
            _typeTable[113] = typeof(global::Microsoft.UI.Xaml.Controls.ItemsSourceView);
            _typeTable[114] = typeof(global::CommunityToolkit.WinUI.Controls.WrapLayout);
            _typeTable[115] = typeof(global::Microsoft.UI.Xaml.Controls.VirtualizingLayout);
            _typeTable[116] = typeof(global::Microsoft.UI.Xaml.Controls.Orientation);
            _typeTable[117] = typeof(global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation);
            _typeTable[118] = typeof(global::ModernWindow.Interface.Dialogs.PackageDetailsPage);
            _typeTable[119] = typeof(global::ModernWindow.Interface.Widgets.Announcer);
            _typeTable[120] = typeof(global::ModernWindow.Interface.Widgets.SettingsEntry);
            _typeTable[121] = typeof(global::CommunityToolkit.WinUI.Controls.SettingsExpander);
            _typeTable[122] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[123] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[124] = typeof(global::ModernWindow.Interface.Widgets.CheckboxCard);
            _typeTable[125] = typeof(global::CommunityToolkit.WinUI.Controls.SettingsCard);
            _typeTable[126] = typeof(global::CommunityToolkit.WinUI.Controls.ContentAlignment);
            _typeTable[127] = typeof(global::ModernWindow.Interface.Widgets.TextboxCard);
            _typeTable[128] = typeof(global::ModernWindow.Interface.Widgets.ButtonCard);
            _typeTable[129] = typeof(global::ModernWindow.Interface.Widgets.ComboboxCard);
            _typeTable[130] = typeof(global::ModernWindow.Interface.SettingsInterface);
            _typeTable[131] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewItem);
            _typeTable[132] = typeof(global::Microsoft.UI.Xaml.Controls.ListViewItem);
            _typeTable[133] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings);
            _typeTable[134] = typeof(global::Microsoft.UI.Xaml.Controls.AppBarButton);
            _typeTable[135] = typeof(global::CommunityToolkit.WinUI.Controls.GridSplitter);
            _typeTable[136] = typeof(global::CommunityToolkit.WinUI.Controls.SizerBase);
            _typeTable[137] = typeof(global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection);
            _typeTable[138] = typeof(global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior);
            _typeTable[139] = typeof(global::Microsoft.UI.Input.InputSystemCursorShape);
            _typeTable[140] = typeof(global::Microsoft.UI.Xaml.Controls.RadioButtons);
            _typeTable[141] = typeof(global::Microsoft.UI.Xaml.Controls.TreeView);
            _typeTable[142] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode);
            _typeTable[143] = typeof(global::Microsoft.UI.Xaml.Media.Animation.TransitionCollection);
            _typeTable[144] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
            _typeTable[145] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[146] = typeof(global::Microsoft.UI.Xaml.Controls.AnimatedIcon);
            _typeTable[147] = typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2);
            _typeTable[148] = typeof(global::Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedFindVisualSource);
            _typeTable[149] = typeof(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Double>);
            _typeTable[150] = typeof(global::ModernWindow.Interface.DiscoverPackagesPage);
            _typeTable[151] = typeof(global::ModernWindow.Interface.InstalledPackagesPage);
            _typeTable[152] = typeof(global::ModernWindow.Interface.PackageBundlePage);
            _typeTable[153] = typeof(global::ModernWindow.Interface.SoftwareUpdatesPage);
            _typeTable[154] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton);
            _typeTable[155] = typeof(global::ModernWindow.Interface.Widgets.SourceManager);
            _typeTable[156] = typeof(global::ModernWindow.PackageEngine.AbstractOperation);
            _typeTable[157] = typeof(global::ModernWindow.PackageEngine.Operations.OperationStatus);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_4_SelectorBar() { return new global::Microsoft.UI.Xaml.Controls.SelectorBar(); }
        private object Activate_7_SelectorBarItem() { return new global::Microsoft.UI.Xaml.Controls.SelectorBarItem(); }
        private object Activate_8_ItemContainer() { return new global::Microsoft.UI.Xaml.Controls.ItemContainer(); }
        private object Activate_12_AboutWingetUI() { return new global::ModernWindow.Interface.AboutWingetUI(); }
        private object Activate_15_TranslatedTextBlock() { return new global::ModernWindow.Interface.Widgets.TranslatedTextBlock(); }
        private object Activate_17_LocalIcon() { return new global::ModernWindow.Interface.Widgets.LocalIcon(); }
        private object Activate_18_ImageIcon() { return new global::Microsoft.UI.Xaml.Controls.ImageIcon(); }
        private object Activate_20_IgnoredUpdatesManager() { return new global::ModernWindow.Interface.IgnoredUpdatesManager(); }
        private object Activate_21_ScrollView() { return new global::Microsoft.UI.Xaml.Controls.ScrollView(); }
        private object Activate_34_ScrollPresenter() { return new global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter(); }
        private object Activate_39_ProgressBar() { return new global::Microsoft.UI.Xaml.Controls.ProgressBar(); }
        private object Activate_44_WebView2() { return new global::Microsoft.UI.Xaml.Controls.WebView2(); }
        private object Activate_48_ReleaseNotes() { return new global::ModernWindow.Interface.Dialogs.ReleaseNotes(); }
        private object Activate_49_MicaBackdrop() { return new global::Microsoft.UI.Xaml.Media.MicaBackdrop(); }
        private object Activate_53_AnimationDictionary() { return new global::CommunityToolkit.WinUI.Animations.AnimationDictionary(); }
        private object Activate_54_AnimationSet() { return new global::CommunityToolkit.WinUI.Animations.AnimationSet(); }
        private object Activate_56_TranslationAnimation() { return new global::CommunityToolkit.WinUI.Animations.TranslationAnimation(); }
        private object Activate_70_OpacityAnimation() { return new global::CommunityToolkit.WinUI.Animations.OpacityAnimation(); }
        private object Activate_76_InfoBar() { return new global::Microsoft.UI.Xaml.Controls.InfoBar(); }
        private object Activate_83_InfoBarTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings(); }
        private object Activate_84_MainWindow() { return new global::ModernWindow.MainWindow(); }
        private object Activate_86_BetterMenu() { return new global::ModernWindow.Interface.Widgets.BetterMenu(); }
        private object Activate_88_BetterMenuItem() { return new global::ModernWindow.Interface.Widgets.BetterMenuItem(); }
        private object Activate_90_NavButton() { return new global::ModernWindow.Interface.Widgets.NavButton(); }
        private object Activate_91_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_93_InfoBadgeTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings(); }
        private object Activate_94_NavigationPage() { return new global::ModernWindow.Interface.NavigationPage(); }
        private object Activate_95_AboutWingetUI() { return new global::ModernWindow.Interface.Pages.AboutPages.AboutWingetUI(); }
        private object Activate_96_Contributors() { return new global::ModernWindow.Interface.Pages.AboutPages.Contributors(); }
        private object Activate_97_SupportMe() { return new global::ModernWindow.Interface.Pages.AboutPages.SupportMe(); }
        private object Activate_98_ThirdPartyLicenses() { return new global::ModernWindow.Interface.Pages.AboutPages.ThirdPartyLicenses(); }
        private object Activate_99_Translators() { return new global::ModernWindow.Interface.Pages.AboutPages.Translators(); }
        private object Activate_101_ImplicitAnimationSet() { return new global::CommunityToolkit.WinUI.Animations.ImplicitAnimationSet(); }
        private object Activate_102_HelpDialog() { return new global::ModernWindow.Interface.Dialogs.HelpDialog(); }
        private object Activate_104_Expander() { return new global::Microsoft.UI.Xaml.Controls.Expander(); }
        private object Activate_109_ItemsRepeater() { return new global::Microsoft.UI.Xaml.Controls.ItemsRepeater(); }
        private object Activate_112_ItemCollectionTransitionProvider() { return new global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider(); }
        private object Activate_114_WrapLayout() { return new global::CommunityToolkit.WinUI.Controls.WrapLayout(); }
        private object Activate_115_VirtualizingLayout() { return new global::Microsoft.UI.Xaml.Controls.VirtualizingLayout(); }
        private object Activate_119_Announcer() { return new global::ModernWindow.Interface.Widgets.Announcer(); }
        private object Activate_120_SettingsEntry() { return new global::ModernWindow.Interface.Widgets.SettingsEntry(); }
        private object Activate_121_SettingsExpander() { return new global::CommunityToolkit.WinUI.Controls.SettingsExpander(); }
        private object Activate_124_CheckboxCard() { return new global::ModernWindow.Interface.Widgets.CheckboxCard(); }
        private object Activate_125_SettingsCard() { return new global::CommunityToolkit.WinUI.Controls.SettingsCard(); }
        private object Activate_127_TextboxCard() { return new global::ModernWindow.Interface.Widgets.TextboxCard(); }
        private object Activate_128_ButtonCard() { return new global::ModernWindow.Interface.Widgets.ButtonCard(); }
        private object Activate_129_ComboboxCard() { return new global::ModernWindow.Interface.Widgets.ComboboxCard(); }
        private object Activate_130_SettingsInterface() { return new global::ModernWindow.Interface.SettingsInterface(); }
        private object Activate_131_TreeViewItem() { return new global::Microsoft.UI.Xaml.Controls.TreeViewItem(); }
        private object Activate_133_TreeViewItemTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings(); }
        private object Activate_135_GridSplitter() { return new global::CommunityToolkit.WinUI.Controls.GridSplitter(); }
        private object Activate_140_RadioButtons() { return new global::Microsoft.UI.Xaml.Controls.RadioButtons(); }
        private object Activate_141_TreeView() { return new global::Microsoft.UI.Xaml.Controls.TreeView(); }
        private object Activate_145_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private object Activate_146_AnimatedIcon() { return new global::Microsoft.UI.Xaml.Controls.AnimatedIcon(); }
        private object Activate_148_AnimatedFindVisualSource() { return new global::Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedFindVisualSource(); }
        private object Activate_150_DiscoverPackagesPage() { return new global::ModernWindow.Interface.DiscoverPackagesPage(); }
        private object Activate_151_InstalledPackagesPage() { return new global::ModernWindow.Interface.InstalledPackagesPage(); }
        private object Activate_152_PackageBundlePage() { return new global::ModernWindow.Interface.PackageBundlePage(); }
        private object Activate_153_SoftwareUpdatesPage() { return new global::ModernWindow.Interface.SoftwareUpdatesPage(); }
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_6_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.SelectorBarItem>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.SelectorBarItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_53_AnimationDictionary(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.Animations.AnimationSet>)instance;
            var newItem = (global::CommunityToolkit.WinUI.Animations.AnimationSet)item;
            collection.Add(newItem);
        }
        private void VectorAdd_54_AnimationSet(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Microsoft.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_60_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Numerics.Vector3>>)instance;
            var newItem = (global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Numerics.Vector3>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_73_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Double>>)instance;
            var newItem = (global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Double>)item;
            collection.Add(newItem);
        }
        private void VectorAdd_101_ImplicitAnimationSet(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Microsoft.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_122_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_144_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Microsoft.UI.Xaml.Controls.SelectorBar
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_4_SelectorBar;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.SelectorBar.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("SelectedItem");
                xamlType = userType;
                break;

            case 5:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.SelectorBarItem>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_6_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  Microsoft.UI.Xaml.Controls.SelectorBarItem
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemContainer"));
                userType.Activator = Activate_7_SelectorBarItem;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ItemContainer.Child");
                userType.AddMemberName("Text");
                userType.AddMemberName("Icon");
                xamlType = userType;
                break;

            case 8:   //  Microsoft.UI.Xaml.Controls.ItemContainer
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_8_ItemContainer;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ItemContainer.Child");
                userType.AddMemberName("Child");
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 9:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  String
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  ModernWindow.Interface.AboutWingetUI
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_12_AboutWingetUI;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  ModernWindow.Interface.Widgets.TranslatedTextBlock
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_15_TranslatedTextBlock;
                userType.AddMemberName("Text");
                userType.AddMemberName("Suffix");
                userType.AddMemberName("Prefix");
                userType.AddMemberName("WrappingMode");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  Microsoft.UI.Xaml.TextWrapping
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  ModernWindow.Interface.Widgets.LocalIcon
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ImageIcon"));
                userType.Activator = Activate_17_LocalIcon;
                userType.AddMemberName("IconName");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  Microsoft.UI.Xaml.Controls.ImageIcon
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.IconElement"));
                userType.Activator = Activate_18_ImageIcon;
                userType.AddMemberName("Source");
                xamlType = userType;
                break;

            case 19:   //  Microsoft.UI.Xaml.Media.ImageSource
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  ModernWindow.Interface.IgnoredUpdatesManager
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_20_IgnoredUpdatesManager;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  Microsoft.UI.Xaml.Controls.ScrollView
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_21_ScrollView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ScrollView.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("ComputedHorizontalScrollBarVisibility");
                userType.AddMemberName("ComputedHorizontalScrollMode");
                userType.AddMemberName("ComputedVerticalScrollBarVisibility");
                userType.AddMemberName("ComputedVerticalScrollMode");
                userType.AddMemberName("ContentOrientation");
                userType.AddMemberName("CurrentAnchor");
                userType.AddMemberName("ExpressionAnimationSources");
                userType.AddMemberName("ExtentHeight");
                userType.AddMemberName("ExtentWidth");
                userType.AddMemberName("HorizontalAnchorRatio");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("HorizontalScrollChainMode");
                userType.AddMemberName("HorizontalScrollMode");
                userType.AddMemberName("HorizontalScrollRailMode");
                userType.AddMemberName("IgnoredInputKinds");
                userType.AddMemberName("MaxZoomFactor");
                userType.AddMemberName("MinZoomFactor");
                userType.AddMemberName("ScrollPresenter");
                userType.AddMemberName("ScrollableHeight");
                userType.AddMemberName("ScrollableWidth");
                userType.AddMemberName("State");
                userType.AddMemberName("VerticalAnchorRatio");
                userType.AddMemberName("VerticalOffset");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("VerticalScrollChainMode");
                userType.AddMemberName("VerticalScrollMode");
                userType.AddMemberName("VerticalScrollRailMode");
                userType.AddMemberName("ViewportHeight");
                userType.AddMemberName("ViewportWidth");
                userType.AddMemberName("ZoomChainMode");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("ZoomMode");
                xamlType = userType;
                break;

            case 22:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollMode
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Disabled);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Auto);
                xamlType = userType;
                break;

            case 24:   //  System.Enum
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 25:   //  System.ValueType
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 26:   //  Microsoft.UI.Xaml.Controls.ScrollingContentOrientation
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Vertical", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Vertical);
                userType.AddEnumValue("Horizontal", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Horizontal);
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.None);
                userType.AddEnumValue("Both", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Both);
                xamlType = userType;
                break;

            case 27:   //  Microsoft.UI.Composition.CompositionPropertySet
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Composition.CompositionObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  Microsoft.UI.Composition.CompositionObject
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 29:   //  Double
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Auto);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Visible);
                userType.AddEnumValue("Hidden", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Hidden);
                xamlType = userType;
                break;

            case 31:   //  Microsoft.UI.Xaml.Controls.ScrollingChainMode
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Auto);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Never);
                xamlType = userType;
                break;

            case 32:   //  Microsoft.UI.Xaml.Controls.ScrollingRailMode
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Disabled);
                xamlType = userType;
                break;

            case 33:   //  Microsoft.UI.Xaml.Controls.ScrollingInputKinds
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.None);
                userType.AddEnumValue("Touch", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Touch);
                userType.AddEnumValue("Pen", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Pen);
                userType.AddEnumValue("MouseWheel", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.MouseWheel);
                userType.AddEnumValue("Keyboard", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Keyboard);
                userType.AddEnumValue("Gamepad", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Gamepad);
                userType.AddEnumValue("All", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.All);
                xamlType = userType;
                break;

            case 34:   //  Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content");
                userType.AddMemberName("Content");
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 35:   //  Microsoft.UI.Xaml.FrameworkElement
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  Microsoft.UI.Xaml.Controls.ScrollingInteractionState
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Idle", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Idle);
                userType.AddEnumValue("Interaction", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Interaction);
                userType.AddEnumValue("Inertia", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Inertia);
                userType.AddEnumValue("Animation", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Animation);
                xamlType = userType;
                break;

            case 37:   //  Single
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  Microsoft.UI.Xaml.Controls.ScrollingZoomMode
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Disabled);
                xamlType = userType;
                break;

            case 39:   //  Microsoft.UI.Xaml.Controls.ProgressBar
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.RangeBase"));
                userType.Activator = Activate_39_ProgressBar;
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("ShowError");
                userType.AddMemberName("ShowPaused");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 40:   //  Microsoft.UI.Xaml.Controls.Primitives.RangeBase
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 41:   //  Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  ModernWindow.Interface.Dialogs.InstallOptionsPage
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  Microsoft.UI.Xaml.Controls.WebView2
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_44_WebView2;
                userType.AddMemberName("Source");
                userType.AddMemberName("CanGoBack");
                userType.AddMemberName("CanGoForward");
                userType.AddMemberName("CoreWebView2");
                userType.AddMemberName("DefaultBackgroundColor");
                xamlType = userType;
                break;

            case 45:   //  System.Uri
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  Microsoft.Web.WebView2.Core.CoreWebView2
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 47:   //  Windows.UI.Color
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 48:   //  ModernWindow.Interface.Dialogs.ReleaseNotes
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_48_ReleaseNotes;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  Microsoft.UI.Xaml.Media.MicaBackdrop
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.SystemBackdrop"));
                userType.Activator = Activate_49_MicaBackdrop;
                userType.AddMemberName("Kind");
                xamlType = userType;
                break;

            case 50:   //  Microsoft.UI.Xaml.Media.SystemBackdrop
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  Microsoft.UI.Composition.SystemBackdrops.MicaKind
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Base", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.Base);
                userType.AddEnumValue("BaseAlt", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.BaseAlt);
                xamlType = userType;
                break;

            case 52:   //  CommunityToolkit.WinUI.Animations.Explicit
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Animations");
                xamlType = userType;
                break;

            case 53:   //  CommunityToolkit.WinUI.Animations.AnimationDictionary
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.CollectionAdd = VectorAdd_53_AnimationDictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 54:   //  CommunityToolkit.WinUI.Animations.AnimationSet
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObjectCollection"));
                userType.Activator = Activate_54_AnimationSet;
                userType.CollectionAdd = VectorAdd_54_AnimationSet;
                userType.AddMemberName("IsSequential");
                xamlType = userType;
                break;

            case 55:   //  Microsoft.UI.Xaml.DependencyObjectCollection
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 56:   //  CommunityToolkit.WinUI.Animations.TranslationAnimation
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<String, System.Numerics.Vector3>"));
                userType.Activator = Activate_56_TranslationAnimation;
                userType.SetContentPropertyName("CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>.KeyFrames");
                xamlType = userType;
                break;

            case 57:   //  CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<String, System.Numerics.Vector3>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>"));
                userType.SetContentPropertyName("CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>.KeyFrames");
                userType.AddMemberName("ImplicitTarget");
                xamlType = userType;
                break;

            case 58:   //  CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation"));
                userType.SetContentPropertyName("CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>.KeyFrames");
                userType.AddMemberName("KeyFrames");
                userType.AddMemberName("From");
                userType.AddMemberName("To");
                xamlType = userType;
                break;

            case 59:   //  CommunityToolkit.WinUI.Animations.Animation
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.AddMemberName("Duration");
                userType.AddMemberName("EasingMode");
                userType.AddMemberName("Delay");
                userType.AddMemberName("EasingType");
                userType.AddMemberName("Repeat");
                userType.AddMemberName("DelayBehavior");
                xamlType = userType;
                break;

            case 60:   //  System.Collections.Generic.IList`1<CommunityToolkit.WinUI.Animations.IKeyFrame`1<System.Numerics.Vector3>>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_60_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  CommunityToolkit.WinUI.Animations.IKeyFrame`1<System.Numerics.Vector3>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 62:   //  System.Nullable`1<TimeSpan>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("TimeSpan"));
                userType.BoxInstance = userType.BoxType<global::System.TimeSpan>;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 63:   //  TimeSpan
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 64:   //  System.Nullable`1<Microsoft.UI.Xaml.Media.Animation.EasingMode>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("Microsoft.UI.Xaml.Media.Animation.EasingMode"));
                userType.BoxInstance = userType.BoxType<global::Microsoft.UI.Xaml.Media.Animation.EasingMode>;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  Microsoft.UI.Xaml.Media.Animation.EasingMode
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 66:   //  System.Nullable`1<CommunityToolkit.WinUI.Animations.EasingType>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("CommunityToolkit.WinUI.Animations.EasingType"));
                userType.BoxInstance = userType.BoxType<global::CommunityToolkit.WinUI.Animations.EasingType>;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 67:   //  CommunityToolkit.WinUI.Animations.EasingType
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::CommunityToolkit.WinUI.Animations.EasingType.Default);
                userType.AddEnumValue("Linear", global::CommunityToolkit.WinUI.Animations.EasingType.Linear);
                userType.AddEnumValue("Cubic", global::CommunityToolkit.WinUI.Animations.EasingType.Cubic);
                userType.AddEnumValue("Back", global::CommunityToolkit.WinUI.Animations.EasingType.Back);
                userType.AddEnumValue("Bounce", global::CommunityToolkit.WinUI.Animations.EasingType.Bounce);
                userType.AddEnumValue("Elastic", global::CommunityToolkit.WinUI.Animations.EasingType.Elastic);
                userType.AddEnumValue("Circle", global::CommunityToolkit.WinUI.Animations.EasingType.Circle);
                userType.AddEnumValue("Quadratic", global::CommunityToolkit.WinUI.Animations.EasingType.Quadratic);
                userType.AddEnumValue("Quartic", global::CommunityToolkit.WinUI.Animations.EasingType.Quartic);
                userType.AddEnumValue("Quintic", global::CommunityToolkit.WinUI.Animations.EasingType.Quintic);
                userType.AddEnumValue("Sine", global::CommunityToolkit.WinUI.Animations.EasingType.Sine);
                xamlType = userType;
                break;

            case 68:   //  CommunityToolkit.WinUI.Animations.RepeatOption
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.CreateFromStringMethod = x => (global::System.Object)global::CommunityToolkit.WinUI.Animations.RepeatOption.Parse(x);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 69:   //  Microsoft.UI.Composition.AnimationDelayBehavior
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("SetInitialValueAfterDelay", global::Microsoft.UI.Composition.AnimationDelayBehavior.SetInitialValueAfterDelay);
                userType.AddEnumValue("SetInitialValueBeforeDelay", global::Microsoft.UI.Composition.AnimationDelayBehavior.SetInitialValueBeforeDelay);
                xamlType = userType;
                break;

            case 70:   //  CommunityToolkit.WinUI.Animations.OpacityAnimation
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<System.Nullable`1<Double>, Double>"));
                userType.Activator = Activate_70_OpacityAnimation;
                userType.SetContentPropertyName("CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>.KeyFrames");
                xamlType = userType;
                break;

            case 71:   //  CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<System.Nullable`1<Double>, Double>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>"));
                userType.SetContentPropertyName("CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>.KeyFrames");
                userType.AddMemberName("ImplicitTarget");
                xamlType = userType;
                break;

            case 72:   //  CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation"));
                userType.SetContentPropertyName("CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>.KeyFrames");
                userType.AddMemberName("KeyFrames");
                userType.AddMemberName("From");
                userType.AddMemberName("To");
                xamlType = userType;
                break;

            case 73:   //  System.Collections.Generic.IList`1<CommunityToolkit.WinUI.Animations.IKeyFrame`1<Double>>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_73_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 74:   //  CommunityToolkit.WinUI.Animations.IKeyFrame`1<Double>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 75:   //  System.Nullable`1<Double>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("Double"));
                userType.BoxInstance = userType.BoxType<global::System.Double>;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 76:   //  Microsoft.UI.Xaml.Controls.InfoBar
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_76_InfoBar;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.InfoBar.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("Severity");
                userType.AddMemberName("ActionButton");
                userType.AddMemberName("CloseButtonCommand");
                userType.AddMemberName("CloseButtonCommandParameter");
                userType.AddMemberName("CloseButtonStyle");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("IsClosable");
                userType.AddMemberName("IsIconVisible");
                userType.AddMemberName("Message");
                userType.AddMemberName("TemplateSettings");
                userType.AddMemberName("Title");
                xamlType = userType;
                break;

            case 77:   //  Microsoft.UI.Xaml.Controls.InfoBarSeverity
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Informational", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Informational);
                userType.AddEnumValue("Success", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Success);
                userType.AddEnumValue("Warning", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Warning);
                userType.AddEnumValue("Error", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Error);
                xamlType = userType;
                break;

            case 78:   //  Microsoft.UI.Xaml.Controls.Primitives.ButtonBase
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 79:   //  System.Windows.Input.ICommand
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 80:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 81:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 82:   //  Microsoft.UI.Xaml.Controls.IconSource
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 83:   //  Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 84:   //  ModernWindow.MainWindow
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_84_MainWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 85:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 86:   //  ModernWindow.Interface.Widgets.BetterMenu
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.MenuFlyout"));
                userType.Activator = Activate_86_BetterMenu;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 87:   //  Microsoft.UI.Xaml.Controls.MenuFlyout
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 88:   //  ModernWindow.Interface.Widgets.BetterMenuItem
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.MenuFlyoutItem"));
                userType.Activator = Activate_88_BetterMenuItem;
                userType.SetContentPropertyName("ModernWindow.Interface.Widgets.BetterMenuItem.Text");
                userType.AddMemberName("Text");
                userType.AddMemberName("IconName");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 89:   //  Microsoft.UI.Xaml.Controls.MenuFlyoutItem
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 90:   //  ModernWindow.Interface.Widgets.NavButton
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_90_NavButton;
                userType.AddMemberName("Text");
                userType.AddMemberName("Glyph");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 91:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_91_InfoBadge;
                userType.AddMemberName("Value");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 92:   //  Int32
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 93:   //  Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 94:   //  ModernWindow.Interface.NavigationPage
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_94_NavigationPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 95:   //  ModernWindow.Interface.Pages.AboutPages.AboutWingetUI
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_95_AboutWingetUI;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 96:   //  ModernWindow.Interface.Pages.AboutPages.Contributors
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_96_Contributors;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 97:   //  ModernWindow.Interface.Pages.AboutPages.SupportMe
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_97_SupportMe;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 98:   //  ModernWindow.Interface.Pages.AboutPages.ThirdPartyLicenses
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_98_ThirdPartyLicenses;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 99:   //  ModernWindow.Interface.Pages.AboutPages.Translators
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_99_Translators;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 100:   //  CommunityToolkit.WinUI.Animations.Implicit
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("ShowAnimations");
                userType.AddMemberName("HideAnimations");
                userType.AddMemberName("Animations");
                xamlType = userType;
                break;

            case 101:   //  CommunityToolkit.WinUI.Animations.ImplicitAnimationSet
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_101_ImplicitAnimationSet;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 102:   //  ModernWindow.Interface.Dialogs.HelpDialog
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_102_HelpDialog;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 103:   //  ModernWindow.Interface.Pages.LogPage
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 104:   //  Microsoft.UI.Xaml.Controls.Expander
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_104_Expander;
                userType.AddMemberName("Header");
                userType.AddMemberName("ExpandDirection");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("HeaderTemplateSelector");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 105:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 106:   //  Microsoft.UI.Xaml.Controls.ExpandDirection
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Down", global::Microsoft.UI.Xaml.Controls.ExpandDirection.Down);
                userType.AddEnumValue("Up", global::Microsoft.UI.Xaml.Controls.ExpandDirection.Up);
                xamlType = userType;
                break;

            case 107:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 108:   //  Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 109:   //  Microsoft.UI.Xaml.Controls.ItemsRepeater
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_109_ItemsRepeater;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("Layout");
                userType.AddMemberName("Background");
                userType.AddMemberName("HorizontalCacheLength");
                userType.AddMemberName("ItemTransitionProvider");
                userType.AddMemberName("ItemsSourceView");
                userType.AddMemberName("VerticalCacheLength");
                xamlType = userType;
                break;

            case 110:   //  Microsoft.UI.Xaml.Controls.Layout
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.AddMemberName("IndexBasedLayoutOrientation");
                xamlType = userType;
                break;

            case 111:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 112:   //  Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 113:   //  Microsoft.UI.Xaml.Controls.ItemsSourceView
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 114:   //  CommunityToolkit.WinUI.Controls.WrapLayout
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.VirtualizingLayout"));
                userType.Activator = Activate_114_WrapLayout;
                userType.AddMemberName("HorizontalSpacing");
                userType.AddMemberName("VerticalSpacing");
                userType.AddMemberName("Orientation");
                xamlType = userType;
                break;

            case 115:   //  Microsoft.UI.Xaml.Controls.VirtualizingLayout
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout"));
                userType.Activator = Activate_115_VirtualizingLayout;
                xamlType = userType;
                break;

            case 116:   //  Microsoft.UI.Xaml.Controls.Orientation
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 117:   //  Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.None);
                userType.AddEnumValue("TopToBottom", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.TopToBottom);
                userType.AddEnumValue("LeftToRight", global::Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation.LeftToRight);
                xamlType = userType;
                break;

            case 118:   //  ModernWindow.Interface.Dialogs.PackageDetailsPage
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 119:   //  ModernWindow.Interface.Widgets.Announcer
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_119_Announcer;
                userType.AddMemberName("Url");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 120:   //  ModernWindow.Interface.Widgets.SettingsEntry
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander"));
                userType.Activator = Activate_120_SettingsEntry;
                userType.SetContentPropertyName("CommunityToolkit.WinUI.Controls.SettingsExpander.Content");
                userType.AddMemberName("Text");
                userType.AddMemberName("UnderText");
                userType.AddMemberName("Icon");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 121:   //  CommunityToolkit.WinUI.Controls.SettingsExpander
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_121_SettingsExpander;
                userType.SetContentPropertyName("CommunityToolkit.WinUI.Controls.SettingsExpander.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("Items");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemContainerStyleSelector");
                userType.AddMemberName("Header");
                userType.AddMemberName("Description");
                userType.AddMemberName("HeaderIcon");
                userType.AddMemberName("ItemsHeader");
                userType.AddMemberName("ItemsFooter");
                userType.AddMemberName("IsExpanded");
                xamlType = userType;
                break;

            case 122:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_122_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 123:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 124:   //  ModernWindow.Interface.Widgets.CheckboxCard
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard"));
                userType.Activator = Activate_124_CheckboxCard;
                userType.AddMemberName("Text");
                userType.AddMemberName("SettingName");
                userType.AddMemberName("Checked");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 125:   //  CommunityToolkit.WinUI.Controls.SettingsCard
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ButtonBase"));
                userType.Activator = Activate_125_SettingsCard;
                userType.AddMemberName("Header");
                userType.AddMemberName("Description");
                userType.AddMemberName("HeaderIcon");
                userType.AddMemberName("ActionIcon");
                userType.AddMemberName("ActionIconToolTip");
                userType.AddMemberName("IsClickEnabled");
                userType.AddMemberName("ContentAlignment");
                userType.AddMemberName("IsActionIconVisible");
                xamlType = userType;
                break;

            case 126:   //  CommunityToolkit.WinUI.Controls.ContentAlignment
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Right", global::CommunityToolkit.WinUI.Controls.ContentAlignment.Right);
                userType.AddEnumValue("Left", global::CommunityToolkit.WinUI.Controls.ContentAlignment.Left);
                userType.AddEnumValue("Vertical", global::CommunityToolkit.WinUI.Controls.ContentAlignment.Vertical);
                xamlType = userType;
                break;

            case 127:   //  ModernWindow.Interface.Widgets.TextboxCard
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard"));
                userType.Activator = Activate_127_TextboxCard;
                userType.AddMemberName("Text");
                userType.AddMemberName("Placeholder");
                userType.AddMemberName("SettingName");
                userType.AddMemberName("HelpUrl");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 128:   //  ModernWindow.Interface.Widgets.ButtonCard
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard"));
                userType.Activator = Activate_128_ButtonCard;
                userType.AddMemberName("Text");
                userType.AddMemberName("ButtonText");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 129:   //  ModernWindow.Interface.Widgets.ComboboxCard
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard"));
                userType.Activator = Activate_129_ComboboxCard;
                userType.AddMemberName("Text");
                userType.AddMemberName("SettingName");
                userType.AddMemberName("Elements");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 130:   //  ModernWindow.Interface.SettingsInterface
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_130_SettingsInterface;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 131:   //  Microsoft.UI.Xaml.Controls.TreeViewItem
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ListViewItem"));
                userType.Activator = Activate_131_TreeViewItem;
                userType.AddMemberName("GlyphBrush");
                userType.AddMemberName("CollapsedGlyph");
                userType.AddMemberName("ExpandedGlyph");
                userType.AddMemberName("GlyphOpacity");
                userType.AddMemberName("GlyphSize");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("TreeViewItemTemplateSettings");
                xamlType = userType;
                break;

            case 132:   //  Microsoft.UI.Xaml.Controls.ListViewItem
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 133:   //  Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 134:   //  Microsoft.UI.Xaml.Controls.AppBarButton
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 135:   //  CommunityToolkit.WinUI.Controls.GridSplitter
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase"));
                userType.Activator = Activate_135_GridSplitter;
                userType.AddMemberName("ResizeDirection");
                userType.AddMemberName("ResizeBehavior");
                userType.AddMemberName("ParentLevel");
                xamlType = userType;
                break;

            case 136:   //  CommunityToolkit.WinUI.Controls.SizerBase
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.AddMemberName("Cursor");
                userType.AddMemberName("DragIncrement");
                userType.AddMemberName("KeyboardIncrement");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("IsThumbVisible");
                xamlType = userType;
                break;

            case 137:   //  CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection.Auto);
                userType.AddEnumValue("Columns", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection.Columns);
                userType.AddEnumValue("Rows", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection.Rows);
                xamlType = userType;
                break;

            case 138:   //  CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("BasedOnAlignment", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior.BasedOnAlignment);
                userType.AddEnumValue("CurrentAndNext", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior.CurrentAndNext);
                userType.AddEnumValue("PreviousAndCurrent", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior.PreviousAndCurrent);
                userType.AddEnumValue("PreviousAndNext", global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior.PreviousAndNext);
                xamlType = userType;
                break;

            case 139:   //  Microsoft.UI.Input.InputSystemCursorShape
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Arrow", global::Microsoft.UI.Input.InputSystemCursorShape.Arrow);
                userType.AddEnumValue("Cross", global::Microsoft.UI.Input.InputSystemCursorShape.Cross);
                userType.AddEnumValue("Hand", global::Microsoft.UI.Input.InputSystemCursorShape.Hand);
                userType.AddEnumValue("Help", global::Microsoft.UI.Input.InputSystemCursorShape.Help);
                userType.AddEnumValue("IBeam", global::Microsoft.UI.Input.InputSystemCursorShape.IBeam);
                userType.AddEnumValue("SizeAll", global::Microsoft.UI.Input.InputSystemCursorShape.SizeAll);
                userType.AddEnumValue("SizeNortheastSouthwest", global::Microsoft.UI.Input.InputSystemCursorShape.SizeNortheastSouthwest);
                userType.AddEnumValue("SizeNorthSouth", global::Microsoft.UI.Input.InputSystemCursorShape.SizeNorthSouth);
                userType.AddEnumValue("SizeNorthwestSoutheast", global::Microsoft.UI.Input.InputSystemCursorShape.SizeNorthwestSoutheast);
                userType.AddEnumValue("SizeWestEast", global::Microsoft.UI.Input.InputSystemCursorShape.SizeWestEast);
                userType.AddEnumValue("UniversalNo", global::Microsoft.UI.Input.InputSystemCursorShape.UniversalNo);
                userType.AddEnumValue("UpArrow", global::Microsoft.UI.Input.InputSystemCursorShape.UpArrow);
                userType.AddEnumValue("Wait", global::Microsoft.UI.Input.InputSystemCursorShape.Wait);
                userType.AddEnumValue("Pin", global::Microsoft.UI.Input.InputSystemCursorShape.Pin);
                userType.AddEnumValue("Person", global::Microsoft.UI.Input.InputSystemCursorShape.Person);
                userType.AddEnumValue("AppStarting", global::Microsoft.UI.Input.InputSystemCursorShape.AppStarting);
                xamlType = userType;
                break;

            case 140:   //  Microsoft.UI.Xaml.Controls.RadioButtons
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_140_RadioButtons;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.RadioButtons.Items");
                userType.AddMemberName("Items");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("MaxColumns");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                xamlType = userType;
                break;

            case 141:   //  Microsoft.UI.Xaml.Controls.TreeView
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_141_TreeView;
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("CanDragItems");
                userType.AddMemberName("CanReorderItems");
                userType.AddMemberName("ItemContainerStyle");
                userType.AddMemberName("ItemContainerStyleSelector");
                userType.AddMemberName("ItemContainerTransitions");
                userType.AddMemberName("ItemTemplate");
                userType.AddMemberName("ItemTemplateSelector");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("RootNodes");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectedItems");
                userType.AddMemberName("SelectedNode");
                userType.AddMemberName("SelectedNodes");
                xamlType = userType;
                break;

            case 142:   //  Microsoft.UI.Xaml.Controls.TreeViewSelectionMode
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.None);
                userType.AddEnumValue("Single", global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.Single);
                userType.AddEnumValue("Multiple", global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode.Multiple);
                xamlType = userType;
                break;

            case 143:   //  Microsoft.UI.Xaml.Media.Animation.TransitionCollection
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 144:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_144_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 145:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_145_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 146:   //  Microsoft.UI.Xaml.Controls.AnimatedIcon
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.IconElement"));
                userType.Activator = Activate_146_AnimatedIcon;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.AnimatedIcon.Source");
                userType.AddMemberName("Source");
                userType.AddMemberName("FallbackIconSource");
                userType.AddMemberName("MirroredWhenRightToLeft");
                userType.AddMemberName("State");
                xamlType = userType;
                break;

            case 147:   //  Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 148:   //  Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedFindVisualSource
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_148_AnimatedFindVisualSource;
                userType.AddMemberName("Markers");
                xamlType = userType;
                break;

            case 149:   //  System.Collections.Generic.IReadOnlyDictionary`2<String, Double>
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 150:   //  ModernWindow.Interface.DiscoverPackagesPage
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_150_DiscoverPackagesPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 151:   //  ModernWindow.Interface.InstalledPackagesPage
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_151_InstalledPackagesPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 152:   //  ModernWindow.Interface.PackageBundlePage
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_152_PackageBundlePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 153:   //  ModernWindow.Interface.SoftwareUpdatesPage
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_153_SoftwareUpdatesPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 154:   //  Microsoft.UI.Xaml.Controls.Primitives.ToggleButton
                xamlType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 155:   //  ModernWindow.Interface.Widgets.SourceManager
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 156:   //  ModernWindow.PackageEngine.AbstractOperation
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.AddMemberName("Status");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 157:   //  ModernWindow.PackageEngine.Operations.OperationStatus
                userType = new global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Pending", global::ModernWindow.PackageEngine.Operations.OperationStatus.Pending);
                userType.AddEnumValue("Running", global::ModernWindow.PackageEngine.Operations.OperationStatus.Running);
                userType.AddEnumValue("Succeeded", global::ModernWindow.PackageEngine.Operations.OperationStatus.Succeeded);
                userType.AddEnumValue("Failed", global::ModernWindow.PackageEngine.Operations.OperationStatus.Failed);
                userType.AddEnumValue("Cancelled", global::ModernWindow.PackageEngine.Operations.OperationStatus.Cancelled);
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::CommunityToolkit.WinUI.Controls.SettingsControlsRns.CommunityToolkit_WinUI_Controls_SettingsControls_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.Controls.SizersRns.CommunityToolkit_WinUI_Controls_Sizers_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_SelectorBar_Items(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SelectorBar)instance;
            return that.Items;
        }
        private object get_2_ItemContainer_Child(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemContainer)instance;
            return that.Child;
        }
        private void set_2_ItemContainer_Child(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemContainer)instance;
            that.Child = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_3_ItemContainer_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemContainer)instance;
            return that.IsSelected;
        }
        private void set_3_ItemContainer_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemContainer)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_4_SelectorBarItem_Text(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SelectorBarItem)instance;
            return that.Text;
        }
        private void set_4_SelectorBarItem_Text(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SelectorBarItem)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_5_SelectorBarItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SelectorBarItem)instance;
            return that.Icon;
        }
        private void set_5_SelectorBarItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SelectorBarItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_6_SelectorBar_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SelectorBar)instance;
            return that.SelectedItem;
        }
        private void set_6_SelectorBar_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.SelectorBar)instance;
            that.SelectedItem = (global::Microsoft.UI.Xaml.Controls.SelectorBarItem)Value;
        }
        private object get_7_TranslatedTextBlock_Text(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.TranslatedTextBlock)instance;
            return that.Text;
        }
        private void set_7_TranslatedTextBlock_Text(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.TranslatedTextBlock)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_8_TranslatedTextBlock_Suffix(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.TranslatedTextBlock)instance;
            return that.Suffix;
        }
        private void set_8_TranslatedTextBlock_Suffix(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.TranslatedTextBlock)instance;
            that.Suffix = (global::System.String)Value;
        }
        private object get_9_TranslatedTextBlock_Prefix(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.TranslatedTextBlock)instance;
            return that.Prefix;
        }
        private void set_9_TranslatedTextBlock_Prefix(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.TranslatedTextBlock)instance;
            that.Prefix = (global::System.String)Value;
        }
        private object get_10_TranslatedTextBlock_WrappingMode(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.TranslatedTextBlock)instance;
            return that.WrappingMode;
        }
        private void set_10_TranslatedTextBlock_WrappingMode(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.TranslatedTextBlock)instance;
            that.WrappingMode = (global::Microsoft.UI.Xaml.TextWrapping)Value;
        }
        private object get_11_LocalIcon_IconName(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.LocalIcon)instance;
            return that.IconName;
        }
        private void set_11_LocalIcon_IconName(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.LocalIcon)instance;
            that.IconName = (global::System.String)Value;
        }
        private object get_12_ImageIcon_Source(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ImageIcon)instance;
            return that.Source;
        }
        private void set_12_ImageIcon_Source(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ImageIcon)instance;
            that.Source = (global::Microsoft.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_13_ScrollView_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.Content;
        }
        private void set_13_ScrollView_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_14_ScrollView_ComputedHorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollBarVisibility;
        }
        private object get_15_ScrollView_ComputedHorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollMode;
        }
        private object get_16_ScrollView_ComputedVerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollBarVisibility;
        }
        private object get_17_ScrollView_ComputedVerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollMode;
        }
        private object get_18_ScrollView_ContentOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ContentOrientation;
        }
        private void set_18_ScrollView_ContentOrientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ContentOrientation = (global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation)Value;
        }
        private object get_19_ScrollView_CurrentAnchor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.CurrentAnchor;
        }
        private object get_20_ScrollView_ExpressionAnimationSources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExpressionAnimationSources;
        }
        private object get_21_ScrollView_ExtentHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentHeight;
        }
        private object get_22_ScrollView_ExtentWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentWidth;
        }
        private object get_23_ScrollView_HorizontalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalAnchorRatio;
        }
        private void set_23_ScrollView_HorizontalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalAnchorRatio = (global::System.Double)Value;
        }
        private object get_24_ScrollView_HorizontalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalOffset;
        }
        private object get_25_ScrollView_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_25_ScrollView_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_26_ScrollView_HorizontalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollChainMode;
        }
        private void set_26_ScrollView_HorizontalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_27_ScrollView_HorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollMode;
        }
        private void set_27_ScrollView_HorizontalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_28_ScrollView_HorizontalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollRailMode;
        }
        private void set_28_ScrollView_HorizontalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_29_ScrollView_IgnoredInputKinds(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.IgnoredInputKinds;
        }
        private void set_29_ScrollView_IgnoredInputKinds(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.IgnoredInputKinds = (global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds)Value;
        }
        private object get_30_ScrollView_MaxZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MaxZoomFactor;
        }
        private void set_30_ScrollView_MaxZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MaxZoomFactor = (global::System.Double)Value;
        }
        private object get_31_ScrollView_MinZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MinZoomFactor;
        }
        private void set_31_ScrollView_MinZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MinZoomFactor = (global::System.Double)Value;
        }
        private object get_32_ScrollView_ScrollPresenter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollPresenter;
        }
        private object get_33_ScrollPresenter_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            return that.Content;
        }
        private void set_33_ScrollPresenter_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_34_ScrollView_ScrollableHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableHeight;
        }
        private object get_35_ScrollView_ScrollableWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableWidth;
        }
        private object get_36_ScrollView_State(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.State;
        }
        private object get_37_ScrollView_VerticalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalAnchorRatio;
        }
        private void set_37_ScrollView_VerticalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalAnchorRatio = (global::System.Double)Value;
        }
        private object get_38_ScrollView_VerticalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalOffset;
        }
        private object get_39_ScrollView_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_39_ScrollView_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_40_ScrollView_VerticalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollChainMode;
        }
        private void set_40_ScrollView_VerticalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_41_ScrollView_VerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollMode;
        }
        private void set_41_ScrollView_VerticalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_42_ScrollView_VerticalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollRailMode;
        }
        private void set_42_ScrollView_VerticalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_43_ScrollView_ViewportHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportHeight;
        }
        private object get_44_ScrollView_ViewportWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportWidth;
        }
        private object get_45_ScrollView_ZoomChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomChainMode;
        }
        private void set_45_ScrollView_ZoomChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_46_ScrollView_ZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomFactor;
        }
        private object get_47_ScrollView_ZoomMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomMode;
        }
        private void set_47_ScrollView_ZoomMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomMode = (global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode)Value;
        }
        private object get_48_ProgressBar_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.IsIndeterminate;
        }
        private void set_48_ProgressBar_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_49_ProgressBar_ShowError(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowError;
        }
        private void set_49_ProgressBar_ShowError(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowError = (global::System.Boolean)Value;
        }
        private object get_50_ProgressBar_ShowPaused(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowPaused;
        }
        private void set_50_ProgressBar_ShowPaused(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowPaused = (global::System.Boolean)Value;
        }
        private object get_51_ProgressBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.TemplateSettings;
        }
        private object get_52_WebView2_Source(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.Source;
        }
        private void set_52_WebView2_Source(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.Source = (global::System.Uri)Value;
        }
        private object get_53_WebView2_CanGoBack(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.CanGoBack;
        }
        private void set_53_WebView2_CanGoBack(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.CanGoBack = (global::System.Boolean)Value;
        }
        private object get_54_WebView2_CanGoForward(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.CanGoForward;
        }
        private void set_54_WebView2_CanGoForward(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.CanGoForward = (global::System.Boolean)Value;
        }
        private object get_55_WebView2_CoreWebView2(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.CoreWebView2;
        }
        private object get_56_WebView2_DefaultBackgroundColor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            return that.DefaultBackgroundColor;
        }
        private void set_56_WebView2_DefaultBackgroundColor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.WebView2)instance;
            that.DefaultBackgroundColor = (global::Windows.UI.Color)Value;
        }
        private object get_57_MicaBackdrop_Kind(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            return that.Kind;
        }
        private void set_57_MicaBackdrop_Kind(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            that.Kind = (global::Microsoft.UI.Composition.SystemBackdrops.MicaKind)Value;
        }
        private object get_58_Explicit_Animations(object instance)
        {
            return global::CommunityToolkit.WinUI.Animations.Explicit.GetAnimations((global::Microsoft.UI.Xaml.UIElement)instance);
        }
        private void set_58_Explicit_Animations(object instance, object Value)
        {
            global::CommunityToolkit.WinUI.Animations.Explicit.SetAnimations((global::Microsoft.UI.Xaml.UIElement)instance, (global::CommunityToolkit.WinUI.Animations.AnimationDictionary)Value);
        }
        private object get_59_AnimationSet_IsSequential(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.AnimationSet)instance;
            return that.IsSequential;
        }
        private void set_59_AnimationSet_IsSequential(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.AnimationSet)instance;
            that.IsSequential = (global::System.Boolean)Value;
        }
        private object get_60_Animation_KeyFrames(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.String, global::System.Numerics.Vector3>)instance;
            return that.KeyFrames;
        }
        private void set_60_Animation_KeyFrames(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.String, global::System.Numerics.Vector3>)instance;
            that.KeyFrames = (global::System.Collections.Generic.IList<global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Numerics.Vector3>>)Value;
        }
        private object get_61_Animation_From(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.String, global::System.Numerics.Vector3>)instance;
            return that.From;
        }
        private void set_61_Animation_From(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.String, global::System.Numerics.Vector3>)instance;
            that.From = (global::System.String)Value;
        }
        private object get_62_Animation_To(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.String, global::System.Numerics.Vector3>)instance;
            return that.To;
        }
        private void set_62_Animation_To(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.String, global::System.Numerics.Vector3>)instance;
            that.To = (global::System.String)Value;
        }
        private object get_63_Animation_Duration(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            return that.Duration;
        }
        private void set_63_Animation_Duration(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            that.Duration = (global::System.Nullable<global::System.TimeSpan>)Value;
        }
        private object get_64_Animation_EasingMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            return that.EasingMode;
        }
        private void set_64_Animation_EasingMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            that.EasingMode = (global::System.Nullable<global::Microsoft.UI.Xaml.Media.Animation.EasingMode>)Value;
        }
        private object get_65_ImplicitAnimation_ImplicitTarget(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.ImplicitAnimation<global::System.String, global::System.Numerics.Vector3>)instance;
            return that.ImplicitTarget;
        }
        private void set_65_ImplicitAnimation_ImplicitTarget(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.ImplicitAnimation<global::System.String, global::System.Numerics.Vector3>)instance;
            that.ImplicitTarget = (global::System.String)Value;
        }
        private object get_66_Animation_Delay(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            return that.Delay;
        }
        private void set_66_Animation_Delay(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            that.Delay = (global::System.Nullable<global::System.TimeSpan>)Value;
        }
        private object get_67_Animation_EasingType(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            return that.EasingType;
        }
        private void set_67_Animation_EasingType(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            that.EasingType = (global::System.Nullable<global::CommunityToolkit.WinUI.Animations.EasingType>)Value;
        }
        private object get_68_Animation_Repeat(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            return that.Repeat;
        }
        private void set_68_Animation_Repeat(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            that.Repeat = (global::CommunityToolkit.WinUI.Animations.RepeatOption)Value;
        }
        private object get_69_Animation_DelayBehavior(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            return that.DelayBehavior;
        }
        private void set_69_Animation_DelayBehavior(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation)instance;
            that.DelayBehavior = (global::Microsoft.UI.Composition.AnimationDelayBehavior)Value;
        }
        private object get_70_Animation_KeyFrames(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.Nullable<global::System.Double>, global::System.Double>)instance;
            return that.KeyFrames;
        }
        private void set_70_Animation_KeyFrames(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.Nullable<global::System.Double>, global::System.Double>)instance;
            that.KeyFrames = (global::System.Collections.Generic.IList<global::CommunityToolkit.WinUI.Animations.IKeyFrame<global::System.Double>>)Value;
        }
        private object get_71_Animation_From(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.Nullable<global::System.Double>, global::System.Double>)instance;
            return that.From;
        }
        private void set_71_Animation_From(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.Nullable<global::System.Double>, global::System.Double>)instance;
            that.From = (global::System.Nullable<global::System.Double>)Value;
        }
        private object get_72_Animation_To(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.Nullable<global::System.Double>, global::System.Double>)instance;
            return that.To;
        }
        private void set_72_Animation_To(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.Animation<global::System.Nullable<global::System.Double>, global::System.Double>)instance;
            that.To = (global::System.Nullable<global::System.Double>)Value;
        }
        private object get_73_ImplicitAnimation_ImplicitTarget(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.ImplicitAnimation<global::System.Nullable<global::System.Double>, global::System.Double>)instance;
            return that.ImplicitTarget;
        }
        private void set_73_ImplicitAnimation_ImplicitTarget(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Animations.ImplicitAnimation<global::System.Nullable<global::System.Double>, global::System.Double>)instance;
            that.ImplicitTarget = (global::System.String)Value;
        }
        private object get_74_InfoBar_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Content;
        }
        private void set_74_InfoBar_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_75_InfoBar_IsOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsOpen;
        }
        private void set_75_InfoBar_IsOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_76_InfoBar_Severity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Severity;
        }
        private void set_76_InfoBar_Severity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Severity = (global::Microsoft.UI.Xaml.Controls.InfoBarSeverity)Value;
        }
        private object get_77_InfoBar_ActionButton(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ActionButton;
        }
        private void set_77_InfoBar_ActionButton(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ActionButton = (global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase)Value;
        }
        private object get_78_InfoBar_CloseButtonCommand(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommand;
        }
        private void set_78_InfoBar_CloseButtonCommand(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_79_InfoBar_CloseButtonCommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommandParameter;
        }
        private void set_79_InfoBar_CloseButtonCommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommandParameter = (global::System.Object)Value;
        }
        private object get_80_InfoBar_CloseButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonStyle;
        }
        private void set_80_InfoBar_CloseButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_81_InfoBar_ContentTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ContentTemplate;
        }
        private void set_81_InfoBar_ContentTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ContentTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_82_InfoBar_IconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IconSource;
        }
        private void set_82_InfoBar_IconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_83_InfoBar_IsClosable(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsClosable;
        }
        private void set_83_InfoBar_IsClosable(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsClosable = (global::System.Boolean)Value;
        }
        private object get_84_InfoBar_IsIconVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsIconVisible;
        }
        private void set_84_InfoBar_IsIconVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsIconVisible = (global::System.Boolean)Value;
        }
        private object get_85_InfoBar_Message(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Message;
        }
        private void set_85_InfoBar_Message(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Message = (global::System.String)Value;
        }
        private object get_86_InfoBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.TemplateSettings;
        }
        private object get_87_InfoBar_Title(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Title;
        }
        private void set_87_InfoBar_Title(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_88_BetterMenuItem_Text(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.BetterMenuItem)instance;
            return that.Text;
        }
        private void set_88_BetterMenuItem_Text(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.BetterMenuItem)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_89_BetterMenuItem_IconName(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.BetterMenuItem)instance;
            return that.IconName;
        }
        private void set_89_BetterMenuItem_IconName(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.BetterMenuItem)instance;
            that.IconName = (global::System.String)Value;
        }
        private object get_90_NavButton_Text(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.NavButton)instance;
            return that.Text;
        }
        private void set_90_NavButton_Text(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.NavButton)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_91_NavButton_Glyph(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.NavButton)instance;
            return that.Glyph;
        }
        private void set_91_NavButton_Glyph(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.NavButton)instance;
            that.Glyph = (global::System.String)Value;
        }
        private object get_92_InfoBadge_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            return that.Value;
        }
        private void set_92_InfoBadge_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            that.Value = (global::System.Int32)Value;
        }
        private object get_93_InfoBadge_IconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            return that.IconSource;
        }
        private void set_93_InfoBadge_IconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_94_InfoBadge_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBadge)instance;
            return that.TemplateSettings;
        }
        private object get_95_Implicit_ShowAnimations(object instance)
        {
            return global::CommunityToolkit.WinUI.Animations.Implicit.GetShowAnimations((global::Microsoft.UI.Xaml.UIElement)instance);
        }
        private void set_95_Implicit_ShowAnimations(object instance, object Value)
        {
            global::CommunityToolkit.WinUI.Animations.Implicit.SetShowAnimations((global::Microsoft.UI.Xaml.UIElement)instance, (global::CommunityToolkit.WinUI.Animations.ImplicitAnimationSet)Value);
        }
        private object get_96_Implicit_HideAnimations(object instance)
        {
            return global::CommunityToolkit.WinUI.Animations.Implicit.GetHideAnimations((global::Microsoft.UI.Xaml.UIElement)instance);
        }
        private void set_96_Implicit_HideAnimations(object instance, object Value)
        {
            global::CommunityToolkit.WinUI.Animations.Implicit.SetHideAnimations((global::Microsoft.UI.Xaml.UIElement)instance, (global::CommunityToolkit.WinUI.Animations.ImplicitAnimationSet)Value);
        }
        private object get_97_Implicit_Animations(object instance)
        {
            return global::CommunityToolkit.WinUI.Animations.Implicit.GetAnimations((global::Microsoft.UI.Xaml.UIElement)instance);
        }
        private void set_97_Implicit_Animations(object instance, object Value)
        {
            global::CommunityToolkit.WinUI.Animations.Implicit.SetAnimations((global::Microsoft.UI.Xaml.UIElement)instance, (global::CommunityToolkit.WinUI.Animations.ImplicitAnimationSet)Value);
        }
        private object get_98_Expander_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.Header;
        }
        private void set_98_Expander_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_99_Expander_ExpandDirection(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.ExpandDirection;
        }
        private void set_99_Expander_ExpandDirection(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.ExpandDirection = (global::Microsoft.UI.Xaml.Controls.ExpandDirection)Value;
        }
        private object get_100_Expander_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.HeaderTemplate;
        }
        private void set_100_Expander_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_101_Expander_HeaderTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.HeaderTemplateSelector;
        }
        private void set_101_Expander_HeaderTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.HeaderTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_102_Expander_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.IsExpanded;
        }
        private void set_102_Expander_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_103_Expander_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Expander)instance;
            return that.TemplateSettings;
        }
        private object get_104_ItemsRepeater_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemTemplate;
        }
        private void set_104_ItemsRepeater_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_105_ItemsRepeater_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSource;
        }
        private void set_105_ItemsRepeater_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_106_ItemsRepeater_Layout(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Layout;
        }
        private void set_106_ItemsRepeater_Layout(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Layout = (global::Microsoft.UI.Xaml.Controls.Layout)Value;
        }
        private object get_107_ItemsRepeater_Background(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.Background;
        }
        private void set_107_ItemsRepeater_Background(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.Background = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_108_ItemsRepeater_HorizontalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.HorizontalCacheLength;
        }
        private void set_108_ItemsRepeater_HorizontalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.HorizontalCacheLength = (global::System.Double)Value;
        }
        private object get_109_ItemsRepeater_ItemTransitionProvider(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemTransitionProvider;
        }
        private void set_109_ItemsRepeater_ItemTransitionProvider(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.ItemTransitionProvider = (global::Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider)Value;
        }
        private object get_110_ItemsRepeater_ItemsSourceView(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.ItemsSourceView;
        }
        private object get_111_ItemsRepeater_VerticalCacheLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            return that.VerticalCacheLength;
        }
        private void set_111_ItemsRepeater_VerticalCacheLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ItemsRepeater)instance;
            that.VerticalCacheLength = (global::System.Double)Value;
        }
        private object get_112_WrapLayout_HorizontalSpacing(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.WrapLayout)instance;
            return that.HorizontalSpacing;
        }
        private void set_112_WrapLayout_HorizontalSpacing(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.WrapLayout)instance;
            that.HorizontalSpacing = (global::System.Double)Value;
        }
        private object get_113_WrapLayout_VerticalSpacing(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.WrapLayout)instance;
            return that.VerticalSpacing;
        }
        private void set_113_WrapLayout_VerticalSpacing(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.WrapLayout)instance;
            that.VerticalSpacing = (global::System.Double)Value;
        }
        private object get_114_WrapLayout_Orientation(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.WrapLayout)instance;
            return that.Orientation;
        }
        private void set_114_WrapLayout_Orientation(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.WrapLayout)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_115_Layout_IndexBasedLayoutOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Layout)instance;
            return that.IndexBasedLayoutOrientation;
        }
        private object get_116_Announcer_Url(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.Announcer)instance;
            return that.Url;
        }
        private void set_116_Announcer_Url(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.Announcer)instance;
            that.Url = (global::System.Uri)Value;
        }
        private object get_117_SettingsExpander_Content(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.Content;
        }
        private void set_117_SettingsExpander_Content(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_118_SettingsEntry_Text(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.SettingsEntry)instance;
            return that.Text;
        }
        private void set_118_SettingsEntry_Text(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.SettingsEntry)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_119_SettingsEntry_UnderText(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.SettingsEntry)instance;
            return that.UnderText;
        }
        private void set_119_SettingsEntry_UnderText(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.SettingsEntry)instance;
            that.UnderText = (global::System.String)Value;
        }
        private object get_120_SettingsEntry_Icon(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.SettingsEntry)instance;
            return that.Icon;
        }
        private void set_120_SettingsEntry_Icon(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.SettingsEntry)instance;
            that.Icon = (global::System.String)Value;
        }
        private object get_121_SettingsExpander_Items(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.Items;
        }
        private void set_121_SettingsExpander_Items(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.Items = (global::System.Collections.Generic.IList<global::System.Object>)Value;
        }
        private object get_122_SettingsExpander_ItemsSource(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.ItemsSource;
        }
        private void set_122_SettingsExpander_ItemsSource(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_123_SettingsExpander_ItemTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.ItemTemplate;
        }
        private void set_123_SettingsExpander_ItemTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_124_SettingsExpander_ItemContainerStyleSelector(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.ItemContainerStyleSelector;
        }
        private void set_124_SettingsExpander_ItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.ItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_125_SettingsExpander_Header(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.Header;
        }
        private void set_125_SettingsExpander_Header(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_126_SettingsExpander_Description(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.Description;
        }
        private void set_126_SettingsExpander_Description(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.Description = (global::System.Object)Value;
        }
        private object get_127_SettingsExpander_HeaderIcon(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.HeaderIcon;
        }
        private void set_127_SettingsExpander_HeaderIcon(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.HeaderIcon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_128_SettingsExpander_ItemsHeader(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.ItemsHeader;
        }
        private void set_128_SettingsExpander_ItemsHeader(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.ItemsHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_129_SettingsExpander_ItemsFooter(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.ItemsFooter;
        }
        private void set_129_SettingsExpander_ItemsFooter(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.ItemsFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_130_SettingsExpander_IsExpanded(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            return that.IsExpanded;
        }
        private void set_130_SettingsExpander_IsExpanded(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsExpander)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_131_CheckboxCard_Text(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.CheckboxCard)instance;
            return that.Text;
        }
        private void set_131_CheckboxCard_Text(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.CheckboxCard)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_132_CheckboxCard_SettingName(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.CheckboxCard)instance;
            return that.SettingName;
        }
        private void set_132_CheckboxCard_SettingName(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.CheckboxCard)instance;
            that.SettingName = (global::System.String)Value;
        }
        private object get_133_CheckboxCard_Checked(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.CheckboxCard)instance;
            return that.Checked;
        }
        private object get_134_SettingsCard_Header(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            return that.Header;
        }
        private void set_134_SettingsCard_Header(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_135_SettingsCard_Description(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            return that.Description;
        }
        private void set_135_SettingsCard_Description(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            that.Description = (global::System.Object)Value;
        }
        private object get_136_SettingsCard_HeaderIcon(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            return that.HeaderIcon;
        }
        private void set_136_SettingsCard_HeaderIcon(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            that.HeaderIcon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_137_SettingsCard_ActionIcon(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            return that.ActionIcon;
        }
        private void set_137_SettingsCard_ActionIcon(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            that.ActionIcon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_138_SettingsCard_ActionIconToolTip(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            return that.ActionIconToolTip;
        }
        private void set_138_SettingsCard_ActionIconToolTip(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            that.ActionIconToolTip = (global::System.String)Value;
        }
        private object get_139_SettingsCard_IsClickEnabled(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            return that.IsClickEnabled;
        }
        private void set_139_SettingsCard_IsClickEnabled(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            that.IsClickEnabled = (global::System.Boolean)Value;
        }
        private object get_140_SettingsCard_ContentAlignment(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            return that.ContentAlignment;
        }
        private void set_140_SettingsCard_ContentAlignment(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            that.ContentAlignment = (global::CommunityToolkit.WinUI.Controls.ContentAlignment)Value;
        }
        private object get_141_SettingsCard_IsActionIconVisible(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            return that.IsActionIconVisible;
        }
        private void set_141_SettingsCard_IsActionIconVisible(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SettingsCard)instance;
            that.IsActionIconVisible = (global::System.Boolean)Value;
        }
        private object get_142_TextboxCard_Text(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.TextboxCard)instance;
            return that.Text;
        }
        private void set_142_TextboxCard_Text(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.TextboxCard)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_143_TextboxCard_Placeholder(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.TextboxCard)instance;
            return that.Placeholder;
        }
        private void set_143_TextboxCard_Placeholder(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.TextboxCard)instance;
            that.Placeholder = (global::System.String)Value;
        }
        private object get_144_TextboxCard_SettingName(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.TextboxCard)instance;
            return that.SettingName;
        }
        private void set_144_TextboxCard_SettingName(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.TextboxCard)instance;
            that.SettingName = (global::System.String)Value;
        }
        private object get_145_TextboxCard_HelpUrl(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.TextboxCard)instance;
            return that.HelpUrl;
        }
        private void set_145_TextboxCard_HelpUrl(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.TextboxCard)instance;
            that.HelpUrl = (global::System.Uri)Value;
        }
        private object get_146_ButtonCard_Text(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.ButtonCard)instance;
            return that.Text;
        }
        private void set_146_ButtonCard_Text(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.ButtonCard)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_147_ButtonCard_ButtonText(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.ButtonCard)instance;
            return that.ButtonText;
        }
        private void set_147_ButtonCard_ButtonText(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.ButtonCard)instance;
            that.ButtonText = (global::System.String)Value;
        }
        private object get_148_ComboboxCard_Text(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.ComboboxCard)instance;
            return that.Text;
        }
        private void set_148_ComboboxCard_Text(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.ComboboxCard)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_149_ComboboxCard_SettingName(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.ComboboxCard)instance;
            return that.SettingName;
        }
        private void set_149_ComboboxCard_SettingName(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.ComboboxCard)instance;
            that.SettingName = (global::System.String)Value;
        }
        private object get_150_ComboboxCard_Elements(object instance)
        {
            var that = (global::ModernWindow.Interface.Widgets.ComboboxCard)instance;
            return that.Elements;
        }
        private void set_150_ComboboxCard_Elements(object instance, object Value)
        {
            var that = (global::ModernWindow.Interface.Widgets.ComboboxCard)instance;
            that.Elements = (global::System.String)Value;
        }
        private object get_151_TreeViewItem_GlyphBrush(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.GlyphBrush;
        }
        private void set_151_TreeViewItem_GlyphBrush(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.GlyphBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_152_TreeViewItem_CollapsedGlyph(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.CollapsedGlyph;
        }
        private void set_152_TreeViewItem_CollapsedGlyph(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.CollapsedGlyph = (global::System.String)Value;
        }
        private object get_153_TreeViewItem_ExpandedGlyph(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.ExpandedGlyph;
        }
        private void set_153_TreeViewItem_ExpandedGlyph(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.ExpandedGlyph = (global::System.String)Value;
        }
        private object get_154_TreeViewItem_GlyphOpacity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.GlyphOpacity;
        }
        private void set_154_TreeViewItem_GlyphOpacity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.GlyphOpacity = (global::System.Double)Value;
        }
        private object get_155_TreeViewItem_GlyphSize(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.GlyphSize;
        }
        private void set_155_TreeViewItem_GlyphSize(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.GlyphSize = (global::System.Double)Value;
        }
        private object get_156_TreeViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_156_TreeViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_157_TreeViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.IsExpanded;
        }
        private void set_157_TreeViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_158_TreeViewItem_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.ItemsSource;
        }
        private void set_158_TreeViewItem_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_159_TreeViewItem_TreeViewItemTemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewItem)instance;
            return that.TreeViewItemTemplateSettings;
        }
        private object get_160_GridSplitter_ResizeDirection(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            return that.ResizeDirection;
        }
        private void set_160_GridSplitter_ResizeDirection(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            that.ResizeDirection = (global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection)Value;
        }
        private object get_161_GridSplitter_ResizeBehavior(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            return that.ResizeBehavior;
        }
        private void set_161_GridSplitter_ResizeBehavior(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            that.ResizeBehavior = (global::CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior)Value;
        }
        private object get_162_GridSplitter_ParentLevel(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            return that.ParentLevel;
        }
        private void set_162_GridSplitter_ParentLevel(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.GridSplitter)instance;
            that.ParentLevel = (global::System.Int32)Value;
        }
        private object get_163_SizerBase_Cursor(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.Cursor;
        }
        private void set_163_SizerBase_Cursor(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.Cursor = (global::Microsoft.UI.Input.InputSystemCursorShape)Value;
        }
        private object get_164_SizerBase_DragIncrement(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.DragIncrement;
        }
        private void set_164_SizerBase_DragIncrement(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.DragIncrement = (global::System.Double)Value;
        }
        private object get_165_SizerBase_KeyboardIncrement(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.KeyboardIncrement;
        }
        private void set_165_SizerBase_KeyboardIncrement(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.KeyboardIncrement = (global::System.Double)Value;
        }
        private object get_166_SizerBase_Orientation(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.Orientation;
        }
        private void set_166_SizerBase_Orientation(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.Orientation = (global::Microsoft.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_167_SizerBase_IsThumbVisible(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            return that.IsThumbVisible;
        }
        private void set_167_SizerBase_IsThumbVisible(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.Controls.SizerBase)instance;
            that.IsThumbVisible = (global::System.Boolean)Value;
        }
        private object get_168_RadioButtons_Items(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.Items;
        }
        private object get_169_RadioButtons_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.Header;
        }
        private void set_169_RadioButtons_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_170_RadioButtons_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.HeaderTemplate;
        }
        private void set_170_RadioButtons_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_171_RadioButtons_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.ItemTemplate;
        }
        private void set_171_RadioButtons_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.ItemTemplate = (global::System.Object)Value;
        }
        private object get_172_RadioButtons_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.ItemsSource;
        }
        private void set_172_RadioButtons_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_173_RadioButtons_MaxColumns(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.MaxColumns;
        }
        private void set_173_RadioButtons_MaxColumns(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.MaxColumns = (global::System.Int32)Value;
        }
        private object get_174_RadioButtons_SelectedIndex(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.SelectedIndex;
        }
        private void set_174_RadioButtons_SelectedIndex(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_175_RadioButtons_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            return that.SelectedItem;
        }
        private void set_175_RadioButtons_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.RadioButtons)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_176_TreeView_SelectionMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectionMode;
        }
        private void set_176_TreeView_SelectionMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.SelectionMode = (global::Microsoft.UI.Xaml.Controls.TreeViewSelectionMode)Value;
        }
        private object get_177_TreeView_CanDragItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.CanDragItems;
        }
        private void set_177_TreeView_CanDragItems(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.CanDragItems = (global::System.Boolean)Value;
        }
        private object get_178_TreeView_CanReorderItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.CanReorderItems;
        }
        private void set_178_TreeView_CanReorderItems(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.CanReorderItems = (global::System.Boolean)Value;
        }
        private object get_179_TreeView_ItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemContainerStyle;
        }
        private void set_179_TreeView_ItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_180_TreeView_ItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemContainerStyleSelector;
        }
        private void set_180_TreeView_ItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_181_TreeView_ItemContainerTransitions(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemContainerTransitions;
        }
        private void set_181_TreeView_ItemContainerTransitions(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemContainerTransitions = (global::Microsoft.UI.Xaml.Media.Animation.TransitionCollection)Value;
        }
        private object get_182_TreeView_ItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemTemplate;
        }
        private void set_182_TreeView_ItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_183_TreeView_ItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemTemplateSelector;
        }
        private void set_183_TreeView_ItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_184_TreeView_ItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.ItemsSource;
        }
        private void set_184_TreeView_ItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_185_TreeView_RootNodes(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.RootNodes;
        }
        private object get_186_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_187_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_187_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_188_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_189_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_190_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_190_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_191_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_191_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_192_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }
        private object get_193_TreeView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectedItem;
        }
        private void set_193_TreeView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_194_TreeView_SelectedItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectedItems;
        }
        private object get_195_TreeView_SelectedNode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectedNode;
        }
        private void set_195_TreeView_SelectedNode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            that.SelectedNode = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)Value;
        }
        private object get_196_TreeView_SelectedNodes(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeView)instance;
            return that.SelectedNodes;
        }
        private object get_197_AnimatedIcon_Source(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            return that.Source;
        }
        private void set_197_AnimatedIcon_Source(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            that.Source = (global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2)Value;
        }
        private object get_198_AnimatedIcon_FallbackIconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            return that.FallbackIconSource;
        }
        private void set_198_AnimatedIcon_FallbackIconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            that.FallbackIconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_199_AnimatedIcon_MirroredWhenRightToLeft(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            return that.MirroredWhenRightToLeft;
        }
        private void set_199_AnimatedIcon_MirroredWhenRightToLeft(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedIcon)instance;
            that.MirroredWhenRightToLeft = (global::System.Boolean)Value;
        }
        private object get_200_AnimatedIcon_State(object instance)
        {
            return global::Microsoft.UI.Xaml.Controls.AnimatedIcon.GetState((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_200_AnimatedIcon_State(object instance, object Value)
        {
            global::Microsoft.UI.Xaml.Controls.AnimatedIcon.SetState((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_201_AnimatedFindVisualSource_Markers(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedFindVisualSource)instance;
            return that.Markers;
        }
        private object get_202_AbstractOperation_Status(object instance)
        {
            var that = (global::ModernWindow.PackageEngine.AbstractOperation)instance;
            return that.Status;
        }
        private void set_202_AbstractOperation_Status(object instance, object Value)
        {
            var that = (global::ModernWindow.PackageEngine.AbstractOperation)instance;
            that.Status = (global::ModernWindow.PackageEngine.Operations.OperationStatus)Value;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::ModernWindow.wingetui_XamlTypeInfo.XamlMember xamlMember = null;
            global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Microsoft.UI.Xaml.Controls.SelectorBar.Items":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.SelectorBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.SelectorBarItem>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_SelectorBar_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemContainer.Child":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemContainer");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Child", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_ItemContainer_Child;
                xamlMember.Setter = set_2_ItemContainer_Child;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemContainer.IsSelected":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemContainer");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_ItemContainer_IsSelected;
                xamlMember.Setter = set_3_ItemContainer_IsSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.SelectorBarItem.Text":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.SelectorBarItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SelectorBarItem_Text;
                xamlMember.Setter = set_4_SelectorBarItem_Text;
                break;
            case "Microsoft.UI.Xaml.Controls.SelectorBarItem.Icon":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.SelectorBarItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SelectorBarItem_Icon;
                xamlMember.Setter = set_5_SelectorBarItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.SelectorBar.SelectedItem":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.SelectorBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SelectedItem", "Microsoft.UI.Xaml.Controls.SelectorBarItem");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SelectorBar_SelectedItem;
                xamlMember.Setter = set_6_SelectorBar_SelectedItem;
                break;
            case "ModernWindow.Interface.Widgets.TranslatedTextBlock.Text":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.TranslatedTextBlock");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_7_TranslatedTextBlock_Text;
                xamlMember.Setter = set_7_TranslatedTextBlock_Text;
                break;
            case "ModernWindow.Interface.Widgets.TranslatedTextBlock.Suffix":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.TranslatedTextBlock");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Suffix", "String");
                xamlMember.Getter = get_8_TranslatedTextBlock_Suffix;
                xamlMember.Setter = set_8_TranslatedTextBlock_Suffix;
                break;
            case "ModernWindow.Interface.Widgets.TranslatedTextBlock.Prefix":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.TranslatedTextBlock");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Prefix", "String");
                xamlMember.Getter = get_9_TranslatedTextBlock_Prefix;
                xamlMember.Setter = set_9_TranslatedTextBlock_Prefix;
                break;
            case "ModernWindow.Interface.Widgets.TranslatedTextBlock.WrappingMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.TranslatedTextBlock");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "WrappingMode", "Microsoft.UI.Xaml.TextWrapping");
                xamlMember.Getter = get_10_TranslatedTextBlock_WrappingMode;
                xamlMember.Setter = set_10_TranslatedTextBlock_WrappingMode;
                break;
            case "ModernWindow.Interface.Widgets.LocalIcon.IconName":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.LocalIcon");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IconName", "String");
                xamlMember.Getter = get_11_LocalIcon_IconName;
                xamlMember.Setter = set_11_LocalIcon_IconName;
                break;
            case "Microsoft.UI.Xaml.Controls.ImageIcon.Source":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ImageIcon");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Source", "Microsoft.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_ImageIcon_Source;
                xamlMember.Setter = set_12_ImageIcon_Source;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.Content":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_ScrollView_Content;
                xamlMember.Setter = set_13_ScrollView_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollBarVisibility":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_ScrollView_ComputedHorizontalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ScrollView_ComputedHorizontalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollBarVisibility":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ScrollView_ComputedVerticalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_ScrollView_ComputedVerticalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ContentOrientation":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ContentOrientation", "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ScrollView_ContentOrientation;
                xamlMember.Setter = set_18_ScrollView_ContentOrientation;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.CurrentAnchor":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CurrentAnchor", "Microsoft.UI.Xaml.UIElement");
                xamlMember.Getter = get_19_ScrollView_CurrentAnchor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExpressionAnimationSources":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ExpressionAnimationSources", "Microsoft.UI.Composition.CompositionPropertySet");
                xamlMember.Getter = get_20_ScrollView_ExpressionAnimationSources;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentHeight":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ExtentHeight", "Double");
                xamlMember.Getter = get_21_ScrollView_ExtentHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentWidth":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ExtentWidth", "Double");
                xamlMember.Getter = get_22_ScrollView_ExtentWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalAnchorRatio":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HorizontalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_ScrollView_HorizontalAnchorRatio;
                xamlMember.Setter = set_23_ScrollView_HorizontalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalOffset":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.Getter = get_24_ScrollView_HorizontalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollBarVisibility":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_ScrollView_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_25_ScrollView_HorizontalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollChainMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HorizontalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_ScrollView_HorizontalScrollChainMode;
                xamlMember.Setter = set_26_ScrollView_HorizontalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_ScrollView_HorizontalScrollMode;
                xamlMember.Setter = set_27_ScrollView_HorizontalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollRailMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HorizontalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_ScrollView_HorizontalScrollRailMode;
                xamlMember.Setter = set_28_ScrollView_HorizontalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.IgnoredInputKinds":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IgnoredInputKinds", "Microsoft.UI.Xaml.Controls.ScrollingInputKinds");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_ScrollView_IgnoredInputKinds;
                xamlMember.Setter = set_29_ScrollView_IgnoredInputKinds;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MaxZoomFactor":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "MaxZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_ScrollView_MaxZoomFactor;
                xamlMember.Setter = set_30_ScrollView_MaxZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MinZoomFactor":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "MinZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_ScrollView_MinZoomFactor;
                xamlMember.Setter = set_31_ScrollView_MinZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollPresenter":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ScrollPresenter", "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_ScrollView_ScrollPresenter;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_ScrollPresenter_Content;
                xamlMember.Setter = set_33_ScrollPresenter_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableHeight":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ScrollableHeight", "Double");
                xamlMember.Getter = get_34_ScrollView_ScrollableHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableWidth":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ScrollableWidth", "Double");
                xamlMember.Getter = get_35_ScrollView_ScrollableWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.State":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "State", "Microsoft.UI.Xaml.Controls.ScrollingInteractionState");
                xamlMember.Getter = get_36_ScrollView_State;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalAnchorRatio":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "VerticalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_ScrollView_VerticalAnchorRatio;
                xamlMember.Setter = set_37_ScrollView_VerticalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalOffset":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.Getter = get_38_ScrollView_VerticalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollBarVisibility":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_ScrollView_VerticalScrollBarVisibility;
                xamlMember.Setter = set_39_ScrollView_VerticalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollChainMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "VerticalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_ScrollView_VerticalScrollChainMode;
                xamlMember.Setter = set_40_ScrollView_VerticalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "VerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_ScrollView_VerticalScrollMode;
                xamlMember.Setter = set_41_ScrollView_VerticalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollRailMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "VerticalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_ScrollView_VerticalScrollRailMode;
                xamlMember.Setter = set_42_ScrollView_VerticalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportHeight":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ViewportHeight", "Double");
                xamlMember.Getter = get_43_ScrollView_ViewportHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportWidth":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ViewportWidth", "Double");
                xamlMember.Getter = get_44_ScrollView_ViewportWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomChainMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ZoomChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_ScrollView_ZoomChainMode;
                xamlMember.Setter = set_45_ScrollView_ZoomChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomFactor":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Single");
                xamlMember.Getter = get_46_ScrollView_ZoomFactor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ZoomMode", "Microsoft.UI.Xaml.Controls.ScrollingZoomMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_ScrollView_ZoomMode;
                xamlMember.Setter = set_47_ScrollView_ZoomMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.IsIndeterminate":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_ProgressBar_IsIndeterminate;
                xamlMember.Setter = set_48_ProgressBar_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowError":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ShowError", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_ProgressBar_ShowError;
                xamlMember.Setter = set_49_ProgressBar_ShowError;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowPaused":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ShowPaused", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_ProgressBar_ShowPaused;
                xamlMember.Setter = set_50_ProgressBar_ShowPaused;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.TemplateSettings":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings");
                xamlMember.Getter = get_51_ProgressBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.Source":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Source", "System.Uri");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_WebView2_Source;
                xamlMember.Setter = set_52_WebView2_Source;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.CanGoBack":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CanGoBack", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_WebView2_CanGoBack;
                xamlMember.Setter = set_53_WebView2_CanGoBack;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.CanGoForward":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CanGoForward", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_WebView2_CanGoForward;
                xamlMember.Setter = set_54_WebView2_CanGoForward;
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.CoreWebView2":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CoreWebView2", "Microsoft.Web.WebView2.Core.CoreWebView2");
                xamlMember.Getter = get_55_WebView2_CoreWebView2;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.WebView2.DefaultBackgroundColor":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.WebView2");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "DefaultBackgroundColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_WebView2_DefaultBackgroundColor;
                xamlMember.Setter = set_56_WebView2_DefaultBackgroundColor;
                break;
            case "Microsoft.UI.Xaml.Media.MicaBackdrop.Kind":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.MicaBackdrop");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Kind", "Microsoft.UI.Composition.SystemBackdrops.MicaKind");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_MicaBackdrop_Kind;
                xamlMember.Setter = set_57_MicaBackdrop_Kind;
                break;
            case "CommunityToolkit.WinUI.Animations.Explicit.Animations":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Explicit");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Animations", "CommunityToolkit.WinUI.Animations.AnimationDictionary");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_58_Explicit_Animations;
                xamlMember.Setter = set_58_Explicit_Animations;
                break;
            case "CommunityToolkit.WinUI.Animations.AnimationSet.IsSequential":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.AnimationSet");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsSequential", "Boolean");
                xamlMember.Getter = get_59_AnimationSet_IsSequential;
                xamlMember.Setter = set_59_AnimationSet_IsSequential;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>.KeyFrames":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "KeyFrames", "System.Collections.Generic.IList`1<CommunityToolkit.WinUI.Animations.IKeyFrame`1<System.Numerics.Vector3>>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_Animation_KeyFrames;
                xamlMember.Setter = set_60_Animation_KeyFrames;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>.From":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "From", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_Animation_From;
                xamlMember.Setter = set_61_Animation_From;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>.To":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation`2<String, System.Numerics.Vector3>");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "To", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_Animation_To;
                xamlMember.Setter = set_62_Animation_To;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation.Duration":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Duration", "System.Nullable`1<TimeSpan>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_Animation_Duration;
                xamlMember.Setter = set_63_Animation_Duration;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation.EasingMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "EasingMode", "System.Nullable`1<Microsoft.UI.Xaml.Media.Animation.EasingMode>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_Animation_EasingMode;
                xamlMember.Setter = set_64_Animation_EasingMode;
                break;
            case "CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<String, System.Numerics.Vector3>.ImplicitTarget":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<String, System.Numerics.Vector3>");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ImplicitTarget", "String");
                xamlMember.Getter = get_65_ImplicitAnimation_ImplicitTarget;
                xamlMember.Setter = set_65_ImplicitAnimation_ImplicitTarget;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation.Delay":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Delay", "System.Nullable`1<TimeSpan>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_Animation_Delay;
                xamlMember.Setter = set_66_Animation_Delay;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation.EasingType":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "EasingType", "System.Nullable`1<CommunityToolkit.WinUI.Animations.EasingType>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_Animation_EasingType;
                xamlMember.Setter = set_67_Animation_EasingType;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation.Repeat":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Repeat", "CommunityToolkit.WinUI.Animations.RepeatOption");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_Animation_Repeat;
                xamlMember.Setter = set_68_Animation_Repeat;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation.DelayBehavior":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "DelayBehavior", "Microsoft.UI.Composition.AnimationDelayBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_Animation_DelayBehavior;
                xamlMember.Setter = set_69_Animation_DelayBehavior;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>.KeyFrames":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "KeyFrames", "System.Collections.Generic.IList`1<CommunityToolkit.WinUI.Animations.IKeyFrame`1<Double>>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_Animation_KeyFrames;
                xamlMember.Setter = set_70_Animation_KeyFrames;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>.From":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "From", "System.Nullable`1<Double>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_Animation_From;
                xamlMember.Setter = set_71_Animation_From;
                break;
            case "CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>.To":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Animation`2<System.Nullable`1<Double>, Double>");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "To", "System.Nullable`1<Double>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_Animation_To;
                xamlMember.Setter = set_72_Animation_To;
                break;
            case "CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<System.Nullable`1<Double>, Double>.ImplicitTarget":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.ImplicitAnimation`2<System.Nullable`1<Double>, Double>");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ImplicitTarget", "String");
                xamlMember.Getter = get_73_ImplicitAnimation_ImplicitTarget;
                xamlMember.Setter = set_73_ImplicitAnimation_ImplicitTarget;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Content":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_InfoBar_Content;
                xamlMember.Setter = set_74_InfoBar_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsOpen":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_InfoBar_IsOpen;
                xamlMember.Setter = set_75_InfoBar_IsOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Severity":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Severity", "Microsoft.UI.Xaml.Controls.InfoBarSeverity");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_InfoBar_Severity;
                xamlMember.Setter = set_76_InfoBar_Severity;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ActionButton":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ActionButton", "Microsoft.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_InfoBar_ActionButton;
                xamlMember.Setter = set_77_InfoBar_ActionButton;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommand":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CloseButtonCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_InfoBar_CloseButtonCommand;
                xamlMember.Setter = set_78_InfoBar_CloseButtonCommand;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommandParameter":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CloseButtonCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_InfoBar_CloseButtonCommandParameter;
                xamlMember.Setter = set_79_InfoBar_CloseButtonCommandParameter;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonStyle":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CloseButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_InfoBar_CloseButtonStyle;
                xamlMember.Setter = set_80_InfoBar_CloseButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ContentTemplate":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_InfoBar_ContentTemplate;
                xamlMember.Setter = set_81_InfoBar_ContentTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IconSource":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_InfoBar_IconSource;
                xamlMember.Setter = set_82_InfoBar_IconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsClosable":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsClosable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_InfoBar_IsClosable;
                xamlMember.Setter = set_83_InfoBar_IsClosable;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsIconVisible":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsIconVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_InfoBar_IsIconVisible;
                xamlMember.Setter = set_84_InfoBar_IsIconVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Message":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Message", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_InfoBar_Message;
                xamlMember.Setter = set_85_InfoBar_Message;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.TemplateSettings":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_InfoBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Title":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_InfoBar_Title;
                xamlMember.Setter = set_87_InfoBar_Title;
                break;
            case "ModernWindow.Interface.Widgets.BetterMenuItem.Text":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.BetterMenuItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_BetterMenuItem_Text;
                xamlMember.Setter = set_88_BetterMenuItem_Text;
                break;
            case "ModernWindow.Interface.Widgets.BetterMenuItem.IconName":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.BetterMenuItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IconName", "String");
                xamlMember.Getter = get_89_BetterMenuItem_IconName;
                xamlMember.Setter = set_89_BetterMenuItem_IconName;
                break;
            case "ModernWindow.Interface.Widgets.NavButton.Text":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.NavButton");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_90_NavButton_Text;
                xamlMember.Setter = set_90_NavButton_Text;
                break;
            case "ModernWindow.Interface.Widgets.NavButton.Glyph":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.NavButton");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Glyph", "String");
                xamlMember.Getter = get_91_NavButton_Glyph;
                xamlMember.Setter = set_91_NavButton_Glyph;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBadge.Value":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Value", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_InfoBadge_Value;
                xamlMember.Setter = set_92_InfoBadge_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBadge.IconSource":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_InfoBadge_IconSource;
                xamlMember.Setter = set_93_InfoBadge_IconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBadge.TemplateSettings":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.InfoBadgeTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_InfoBadge_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.Animations.Implicit.ShowAnimations":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Implicit");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ShowAnimations", "CommunityToolkit.WinUI.Animations.ImplicitAnimationSet");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_95_Implicit_ShowAnimations;
                xamlMember.Setter = set_95_Implicit_ShowAnimations;
                break;
            case "CommunityToolkit.WinUI.Animations.Implicit.HideAnimations":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Implicit");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HideAnimations", "CommunityToolkit.WinUI.Animations.ImplicitAnimationSet");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_96_Implicit_HideAnimations;
                xamlMember.Setter = set_96_Implicit_HideAnimations;
                break;
            case "CommunityToolkit.WinUI.Animations.Implicit.Animations":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Animations.Implicit");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Animations", "CommunityToolkit.WinUI.Animations.ImplicitAnimationSet");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_97_Implicit_Animations;
                xamlMember.Setter = set_97_Implicit_Animations;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.Header":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_Expander_Header;
                xamlMember.Setter = set_98_Expander_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.ExpandDirection":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ExpandDirection", "Microsoft.UI.Xaml.Controls.ExpandDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_Expander_ExpandDirection;
                xamlMember.Setter = set_99_Expander_ExpandDirection;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.HeaderTemplate":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_Expander_HeaderTemplate;
                xamlMember.Setter = set_100_Expander_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.HeaderTemplateSelector":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HeaderTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_Expander_HeaderTemplateSelector;
                xamlMember.Setter = set_101_Expander_HeaderTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.IsExpanded":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_Expander_IsExpanded;
                xamlMember.Setter = set_102_Expander_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.Expander.TemplateSettings":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Expander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ExpanderTemplateSettings");
                xamlMember.Getter = get_103_Expander_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTemplate":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_ItemsRepeater_ItemTemplate;
                xamlMember.Setter = set_104_ItemsRepeater_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSource":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_ItemsRepeater_ItemsSource;
                xamlMember.Setter = set_105_ItemsRepeater_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Layout":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Layout", "Microsoft.UI.Xaml.Controls.Layout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_ItemsRepeater_Layout;
                xamlMember.Setter = set_106_ItemsRepeater_Layout;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.Background":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Background", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_ItemsRepeater_Background;
                xamlMember.Setter = set_107_ItemsRepeater_Background;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.HorizontalCacheLength":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HorizontalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_ItemsRepeater_HorizontalCacheLength;
                xamlMember.Setter = set_108_ItemsRepeater_HorizontalCacheLength;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemTransitionProvider":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemTransitionProvider", "Microsoft.UI.Xaml.Controls.ItemCollectionTransitionProvider");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_ItemsRepeater_ItemTransitionProvider;
                xamlMember.Setter = set_109_ItemsRepeater_ItemTransitionProvider;
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.ItemsSourceView":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemsSourceView", "Microsoft.UI.Xaml.Controls.ItemsSourceView");
                xamlMember.Getter = get_110_ItemsRepeater_ItemsSourceView;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ItemsRepeater.VerticalCacheLength":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ItemsRepeater");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "VerticalCacheLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_ItemsRepeater_VerticalCacheLength;
                xamlMember.Setter = set_111_ItemsRepeater_VerticalCacheLength;
                break;
            case "CommunityToolkit.WinUI.Controls.WrapLayout.HorizontalSpacing":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.WrapLayout");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HorizontalSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_WrapLayout_HorizontalSpacing;
                xamlMember.Setter = set_112_WrapLayout_HorizontalSpacing;
                break;
            case "CommunityToolkit.WinUI.Controls.WrapLayout.VerticalSpacing":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.WrapLayout");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "VerticalSpacing", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_WrapLayout_VerticalSpacing;
                xamlMember.Setter = set_113_WrapLayout_VerticalSpacing;
                break;
            case "CommunityToolkit.WinUI.Controls.WrapLayout.Orientation":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.WrapLayout");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_WrapLayout_Orientation;
                xamlMember.Setter = set_114_WrapLayout_Orientation;
                break;
            case "Microsoft.UI.Xaml.Controls.Layout.IndexBasedLayoutOrientation":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Layout");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IndexBasedLayoutOrientation", "Microsoft.UI.Xaml.Controls.IndexBasedLayoutOrientation");
                xamlMember.Getter = get_115_Layout_IndexBasedLayoutOrientation;
                xamlMember.SetIsReadOnly();
                break;
            case "ModernWindow.Interface.Widgets.Announcer.Url":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.Announcer");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Url", "System.Uri");
                xamlMember.Getter = get_116_Announcer_Url;
                xamlMember.Setter = set_116_Announcer_Url;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.Content":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_SettingsExpander_Content;
                xamlMember.Setter = set_117_SettingsExpander_Content;
                break;
            case "ModernWindow.Interface.Widgets.SettingsEntry.Text":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.SettingsEntry");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_118_SettingsEntry_Text;
                xamlMember.Setter = set_118_SettingsEntry_Text;
                break;
            case "ModernWindow.Interface.Widgets.SettingsEntry.UnderText":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.SettingsEntry");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "UnderText", "String");
                xamlMember.Getter = get_119_SettingsEntry_UnderText;
                xamlMember.Setter = set_119_SettingsEntry_UnderText;
                break;
            case "ModernWindow.Interface.Widgets.SettingsEntry.Icon":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.SettingsEntry");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Icon", "String");
                xamlMember.Getter = get_120_SettingsEntry_Icon;
                xamlMember.Setter = set_120_SettingsEntry_Icon;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.Items":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_SettingsExpander_Items;
                xamlMember.Setter = set_121_SettingsExpander_Items;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.ItemsSource":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_SettingsExpander_ItemsSource;
                xamlMember.Setter = set_122_SettingsExpander_ItemsSource;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.ItemTemplate":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_SettingsExpander_ItemTemplate;
                xamlMember.Setter = set_123_SettingsExpander_ItemTemplate;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.ItemContainerStyleSelector":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_SettingsExpander_ItemContainerStyleSelector;
                xamlMember.Setter = set_124_SettingsExpander_ItemContainerStyleSelector;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.Header":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_SettingsExpander_Header;
                xamlMember.Setter = set_125_SettingsExpander_Header;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.Description":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Description", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_SettingsExpander_Description;
                xamlMember.Setter = set_126_SettingsExpander_Description;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.HeaderIcon":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HeaderIcon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_SettingsExpander_HeaderIcon;
                xamlMember.Setter = set_127_SettingsExpander_HeaderIcon;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.ItemsHeader":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemsHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_SettingsExpander_ItemsHeader;
                xamlMember.Setter = set_128_SettingsExpander_ItemsHeader;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.ItemsFooter":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemsFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_SettingsExpander_ItemsFooter;
                xamlMember.Setter = set_129_SettingsExpander_ItemsFooter;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsExpander.IsExpanded":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsExpander");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_SettingsExpander_IsExpanded;
                xamlMember.Setter = set_130_SettingsExpander_IsExpanded;
                break;
            case "ModernWindow.Interface.Widgets.CheckboxCard.Text":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.CheckboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_131_CheckboxCard_Text;
                xamlMember.Setter = set_131_CheckboxCard_Text;
                break;
            case "ModernWindow.Interface.Widgets.CheckboxCard.SettingName":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.CheckboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SettingName", "String");
                xamlMember.Getter = get_132_CheckboxCard_SettingName;
                xamlMember.Setter = set_132_CheckboxCard_SettingName;
                break;
            case "ModernWindow.Interface.Widgets.CheckboxCard.Checked":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.CheckboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Checked", "Boolean");
                xamlMember.Getter = get_133_CheckboxCard_Checked;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsCard.Header":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_SettingsCard_Header;
                xamlMember.Setter = set_134_SettingsCard_Header;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsCard.Description":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Description", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_SettingsCard_Description;
                xamlMember.Setter = set_135_SettingsCard_Description;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsCard.HeaderIcon":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HeaderIcon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_SettingsCard_HeaderIcon;
                xamlMember.Setter = set_136_SettingsCard_HeaderIcon;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsCard.ActionIcon":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ActionIcon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_SettingsCard_ActionIcon;
                xamlMember.Setter = set_137_SettingsCard_ActionIcon;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsCard.ActionIconToolTip":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ActionIconToolTip", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_SettingsCard_ActionIconToolTip;
                xamlMember.Setter = set_138_SettingsCard_ActionIconToolTip;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsCard.IsClickEnabled":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsClickEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_SettingsCard_IsClickEnabled;
                xamlMember.Setter = set_139_SettingsCard_IsClickEnabled;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsCard.ContentAlignment":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ContentAlignment", "CommunityToolkit.WinUI.Controls.ContentAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_SettingsCard_ContentAlignment;
                xamlMember.Setter = set_140_SettingsCard_ContentAlignment;
                break;
            case "CommunityToolkit.WinUI.Controls.SettingsCard.IsActionIconVisible":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SettingsCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsActionIconVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_SettingsCard_IsActionIconVisible;
                xamlMember.Setter = set_141_SettingsCard_IsActionIconVisible;
                break;
            case "ModernWindow.Interface.Widgets.TextboxCard.Text":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.TextboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_142_TextboxCard_Text;
                xamlMember.Setter = set_142_TextboxCard_Text;
                break;
            case "ModernWindow.Interface.Widgets.TextboxCard.Placeholder":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.TextboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Placeholder", "String");
                xamlMember.Getter = get_143_TextboxCard_Placeholder;
                xamlMember.Setter = set_143_TextboxCard_Placeholder;
                break;
            case "ModernWindow.Interface.Widgets.TextboxCard.SettingName":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.TextboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SettingName", "String");
                xamlMember.Getter = get_144_TextboxCard_SettingName;
                xamlMember.Setter = set_144_TextboxCard_SettingName;
                break;
            case "ModernWindow.Interface.Widgets.TextboxCard.HelpUrl":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.TextboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HelpUrl", "System.Uri");
                xamlMember.Getter = get_145_TextboxCard_HelpUrl;
                xamlMember.Setter = set_145_TextboxCard_HelpUrl;
                break;
            case "ModernWindow.Interface.Widgets.ButtonCard.Text":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.ButtonCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_146_ButtonCard_Text;
                xamlMember.Setter = set_146_ButtonCard_Text;
                break;
            case "ModernWindow.Interface.Widgets.ButtonCard.ButtonText":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.ButtonCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ButtonText", "String");
                xamlMember.Getter = get_147_ButtonCard_ButtonText;
                xamlMember.Setter = set_147_ButtonCard_ButtonText;
                break;
            case "ModernWindow.Interface.Widgets.ComboboxCard.Text":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.ComboboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_148_ComboboxCard_Text;
                xamlMember.Setter = set_148_ComboboxCard_Text;
                break;
            case "ModernWindow.Interface.Widgets.ComboboxCard.SettingName":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.ComboboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SettingName", "String");
                xamlMember.Getter = get_149_ComboboxCard_SettingName;
                xamlMember.Setter = set_149_ComboboxCard_SettingName;
                break;
            case "ModernWindow.Interface.Widgets.ComboboxCard.Elements":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.Interface.Widgets.ComboboxCard");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Elements", "String");
                xamlMember.Getter = get_150_ComboboxCard_Elements;
                xamlMember.Setter = set_150_ComboboxCard_Elements;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphBrush":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "GlyphBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_TreeViewItem_GlyphBrush;
                xamlMember.Setter = set_151_TreeViewItem_GlyphBrush;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.CollapsedGlyph":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CollapsedGlyph", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_TreeViewItem_CollapsedGlyph;
                xamlMember.Setter = set_152_TreeViewItem_CollapsedGlyph;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.ExpandedGlyph":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ExpandedGlyph", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_TreeViewItem_ExpandedGlyph;
                xamlMember.Setter = set_153_TreeViewItem_ExpandedGlyph;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphOpacity":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "GlyphOpacity", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_TreeViewItem_GlyphOpacity;
                xamlMember.Setter = set_154_TreeViewItem_GlyphOpacity;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.GlyphSize":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "GlyphSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_TreeViewItem_GlyphSize;
                xamlMember.Setter = set_155_TreeViewItem_GlyphSize;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.HasUnrealizedChildren":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_TreeViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_156_TreeViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.IsExpanded":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_TreeViewItem_IsExpanded;
                xamlMember.Setter = set_157_TreeViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.ItemsSource":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_TreeViewItem_ItemsSource;
                xamlMember.Setter = set_158_TreeViewItem_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewItem.TreeViewItemTemplateSettings":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewItem");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "TreeViewItemTemplateSettings", "Microsoft.UI.Xaml.Controls.TreeViewItemTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_TreeViewItem_TreeViewItemTemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.Controls.GridSplitter.ResizeDirection":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.GridSplitter");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ResizeDirection", "CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_GridSplitter_ResizeDirection;
                xamlMember.Setter = set_160_GridSplitter_ResizeDirection;
                break;
            case "CommunityToolkit.WinUI.Controls.GridSplitter.ResizeBehavior":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.GridSplitter");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ResizeBehavior", "CommunityToolkit.WinUI.Controls.GridSplitter.GridResizeBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_GridSplitter_ResizeBehavior;
                xamlMember.Setter = set_161_GridSplitter_ResizeBehavior;
                break;
            case "CommunityToolkit.WinUI.Controls.GridSplitter.ParentLevel":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.GridSplitter");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ParentLevel", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_162_GridSplitter_ParentLevel;
                xamlMember.Setter = set_162_GridSplitter_ParentLevel;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.Cursor":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Cursor", "Microsoft.UI.Input.InputSystemCursorShape");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_SizerBase_Cursor;
                xamlMember.Setter = set_163_SizerBase_Cursor;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.DragIncrement":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "DragIncrement", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_SizerBase_DragIncrement;
                xamlMember.Setter = set_164_SizerBase_DragIncrement;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.KeyboardIncrement":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "KeyboardIncrement", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_SizerBase_KeyboardIncrement;
                xamlMember.Setter = set_165_SizerBase_KeyboardIncrement;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.Orientation":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Orientation", "Microsoft.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_SizerBase_Orientation;
                xamlMember.Setter = set_166_SizerBase_Orientation;
                break;
            case "CommunityToolkit.WinUI.Controls.SizerBase.IsThumbVisible":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.Controls.SizerBase");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsThumbVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_SizerBase_IsThumbVisible;
                xamlMember.Setter = set_167_SizerBase_IsThumbVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.Items":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_RadioButtons_Items;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.Header":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_RadioButtons_Header;
                xamlMember.Setter = set_169_RadioButtons_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.HeaderTemplate":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_RadioButtons_HeaderTemplate;
                xamlMember.Setter = set_170_RadioButtons_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.ItemTemplate":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_RadioButtons_ItemTemplate;
                xamlMember.Setter = set_171_RadioButtons_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.ItemsSource":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_RadioButtons_ItemsSource;
                xamlMember.Setter = set_172_RadioButtons_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.MaxColumns":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "MaxColumns", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_RadioButtons_MaxColumns;
                xamlMember.Setter = set_173_RadioButtons_MaxColumns;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.SelectedIndex":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_174_RadioButtons_SelectedIndex;
                xamlMember.Setter = set_174_RadioButtons_SelectedIndex;
                break;
            case "Microsoft.UI.Xaml.Controls.RadioButtons.SelectedItem":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.RadioButtons");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_175_RadioButtons_SelectedItem;
                xamlMember.Setter = set_175_RadioButtons_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectionMode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SelectionMode", "Microsoft.UI.Xaml.Controls.TreeViewSelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_176_TreeView_SelectionMode;
                xamlMember.Setter = set_176_TreeView_SelectionMode;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.CanDragItems":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CanDragItems", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_177_TreeView_CanDragItems;
                xamlMember.Setter = set_177_TreeView_CanDragItems;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.CanReorderItems":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "CanReorderItems", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_178_TreeView_CanReorderItems;
                xamlMember.Setter = set_178_TreeView_CanReorderItems;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyle":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_179_TreeView_ItemContainerStyle;
                xamlMember.Setter = set_179_TreeView_ItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemContainerStyleSelector":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_180_TreeView_ItemContainerStyleSelector;
                xamlMember.Setter = set_180_TreeView_ItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemContainerTransitions":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemContainerTransitions", "Microsoft.UI.Xaml.Media.Animation.TransitionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_181_TreeView_ItemContainerTransitions;
                xamlMember.Setter = set_181_TreeView_ItemContainerTransitions;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemTemplate":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_182_TreeView_ItemTemplate;
                xamlMember.Setter = set_182_TreeView_ItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemTemplateSelector":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_183_TreeView_ItemTemplateSelector;
                xamlMember.Setter = set_183_TreeView_ItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.ItemsSource":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_184_TreeView_ItemsSource;
                xamlMember.Setter = set_184_TreeView_ItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.RootNodes":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "RootNodes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_185_TreeView_RootNodes;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_186_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_187_TreeViewNode_Content;
                xamlMember.Setter = set_187_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_188_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_189_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_190_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_190_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_191_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_191_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_192_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectedItem":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_193_TreeView_SelectedItem;
                xamlMember.Setter = set_193_TreeView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectedItems":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.Getter = get_194_TreeView_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectedNode":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SelectedNode", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_195_TreeView_SelectedNode;
                xamlMember.Setter = set_195_TreeView_SelectedNode;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeView.SelectedNodes":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeView");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "SelectedNodes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_196_TreeView_SelectedNodes;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedIcon.Source":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedIcon");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Source", "Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_197_AnimatedIcon_Source;
                xamlMember.Setter = set_197_AnimatedIcon_Source;
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedIcon.FallbackIconSource":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedIcon");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "FallbackIconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_198_AnimatedIcon_FallbackIconSource;
                xamlMember.Setter = set_198_AnimatedIcon_FallbackIconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedIcon.MirroredWhenRightToLeft":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedIcon");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "MirroredWhenRightToLeft", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_199_AnimatedIcon_MirroredWhenRightToLeft;
                xamlMember.Setter = set_199_AnimatedIcon_MirroredWhenRightToLeft;
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedIcon.State":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedIcon");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "State", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_200_AnimatedIcon_State;
                xamlMember.Setter = set_200_AnimatedIcon_State;
                break;
            case "Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedFindVisualSource.Markers":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.AnimatedVisuals.AnimatedFindVisualSource");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Markers", "System.Collections.Generic.IReadOnlyDictionary`2<String, Double>");
                xamlMember.Getter = get_201_AnimatedFindVisualSource_Markers;
                xamlMember.SetIsReadOnly();
                break;
            case "ModernWindow.PackageEngine.AbstractOperation.Status":
                userType = (global::ModernWindow.wingetui_XamlTypeInfo.XamlUserType)GetXamlTypeByName("ModernWindow.PackageEngine.AbstractOperation");
                xamlMember = new global::ModernWindow.wingetui_XamlTypeInfo.XamlMember(this, "Status", "ModernWindow.PackageEngine.Operations.OperationStatus");
                xamlMember.Getter = get_202_AbstractOperation_Status;
                xamlMember.Setter = set_202_AbstractOperation_Status;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::ModernWindow.wingetui_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::ModernWindow.wingetui_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::ModernWindow.wingetui_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2403")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::ModernWindow.wingetui_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::ModernWindow.wingetui_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

